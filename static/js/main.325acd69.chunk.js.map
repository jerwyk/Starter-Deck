{"version":3,"sources":["components/header/appHeader.tsx","components/deck/deckDialogs.tsx","mobx/cardModel.ts","mobx/editorModel.ts","mobx/index.ts","components/deck/deckDisplay/deckList/index.tsx","ttsGenerator/generateObjects.ts","ttsGenerator/generateDeck.ts","components/deck/deckCardCounter.tsx","components/deck/deckView.tsx","util/tabPanel.tsx","components/editor/cardDetail.tsx","components/editor/editorSidebar.tsx","components/editor/deckEditor.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["AppHeader","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Component","BulkImporter","open","onClose","onImport","useState","cardNames","setCardNames","Dialog","className","maxWidth","fullWidth","DialogTitle","Box","display","alignItems","flexGrow","onClick","DialogContent","TextField","multiline","rows","label","onChange","e","target","value","DialogActions","Button","autoFocus","identifiers","split","forEach","card","num","name","i","Number","push","join","createIdentifiers","NameChanger","onConfirm","newName","setnewName","CardImageModel","t","model","small","string","normal","large","png","art_crop","border_crop","CardFaceModel","array","object","mana_cost","type_line","oracle_text","colors","flavor_text","artist","artist_id","illustration_id","image_uris","CardModel","id","quantity","optional","number","isCommander","boolean","lang","released_at","uri","scryfall_uri","highres_image","maybe","cmc","power","toughness","color_identity","keywords","all_parts","component","card_faces","legalities","standard","future","historic","gladiator","pioneer","modern","legacy","pauper","vintage","penny","commander","brawl","duel","oldschool","premodern","set","set_name","set_type","set_uri","set_search_uri","scryfall_set_uri","rulings_uri","prints_search_uri","collector_number","digital","rarity","EditorModel","focusedCard","bulkImportDialog","deckName","deck","actions","self","addCard","find","item","replace","map","sorted","sort","a","b","setDeck","cast","setDeckName","addCards","cards","removeCard","cardId","deckList","index","lastIndexOf","splice","focusCard","setCommander","changeEdition","newEdition","views","RootModel","editor","initialState","create","rootStore","onSnapshot","snapshot","console","log","RootStoreContext","createContext","Provider","useMst","store","useContext","Error","CardListEntry","ManaCosts","matches","match","ListItemIcon","manas","substring","length","toLowerCase","ListItem","button","divider","ListItemText","classes","primary","ListItemSecondaryAction","size","withWidth","groups","width","planeswalker","creature","sorcery","instant","artifact","enchantment","land","groupedDeck","useMemo","grouped","some","type","includes","Object","keys","key","List","dense","subheader","ListSubheader","generateTtsCard","frontUrl","backUrl","data","Name","Transform","posX","posY","posZ","rotX","rotY","rotZ","scaleX","scaleY","scaleZ","Nickname","Description","GMNotes","Locked","Grid","Snap","IgnoreFoW","MeasureMovement","DragSelectable","Autoraise","Sticky","Tooltip","GridProjection","CardID","LuaScript","LuaScriptState","XmlUI","FaceURL","BackURL","NumWidth","NumHeight","BackIsHidden","UniqueBack","Type","generateTtsDoubleCard","description","firstFrontUrl","secondFrontUrl","States","2","GUID","Memo","Value","HideWhenFaceDown","Hands","SidewaysCard","CustomDeck","defaltBackUrl","getCardImageUrl","face","buildDeckObject","deckIds","cardList","deckObj","ColorDiffuse","r","g","DeckIDs","ContainedObjects","assign","generateTtsDeck","title","commanderIds","tokenIds","tokenList","commanderList","ttsCardList","flatMap","part","cardImage","deckBox","SaveName","GameMode","Date","Gravity","PlayArea","GameType","GameComplexity","Tags","Table","Sky","Note","Rules","TabStates","ObjectStates","MaterialIndex","MeshIndex","CustomMesh","MeshURL","DiffuseURL","NormalURL","ColliderURL","Convex","TypeIndex","CastShadows","VersionNumber","mainDeck","commanderDeck","Axios","post","headers","res","tokenDeck","CardCounter","deckData","trim","entries","keyA","keyB","processDeck","popupId","popupState","Fab","bindToggle","Popper","bindPopper","placement","transition","disablePortal","modifiers","offset","enabled","TransitionProps","Fade","timeout","TableContainer","Paper","style","minWidth","TableBody","TableRow","TableCell","scope","align","DeckView","inject","observer","state","importerOpen","changeNameOpen","actionAnchorEl","deckTitle","bulkImportCards","remain","fetched","slice","props","importAction","setState","exportAction","Blob","JSON","stringify","blob","FileSaver","saveAs","changeNameAction","handleCardDelete","this","getSnapshot","ActionMenu","anchorEl","keepMounted","Boolean","MenuItem","currentTarget","paragraph","TabPanel","children","other","role","hidden","aria-labelledby","CardDetail","editions","selected","handleChange","event","newValue","prevProps","get","params","q","unique","order","CardInfo","Divider","src","alt","onSetCommander","EditionSelect","GridList","cellHeight","spacing","cols","GridListTile","onEditionChange","height","borderRadius","fontSize","Tabs","indicatorColor","Tab","sidebarWitdh","React","setValue","focusedCardId","orientation","icon","fill","DeckEditor","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.325acd69.chunk.js","sourcesContent":["import { AppBar, IconButton, Toolbar, Typography } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nexport default class AppHeader extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<AppBar position=\"fixed\">\r\n\t\t\t\t\t<Toolbar>\r\n\t\t\t\t\t\t<IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n\t\t\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t<Typography variant=\"h6\">Unnamed App</Typography>\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t</AppBar>\r\n\t\t\t\t<Toolbar />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import {\r\n\tBox,\r\n\tButton,\r\n\tDialog,\r\n\tDialogActions,\r\n\tDialogContent,\r\n\tDialogTitle,\r\n\tIconButton,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { identifier } from \"../../types\";\r\n\r\ninterface IBulkImporterProps {\r\n\topen: boolean;\r\n\tonClose: () => void;\r\n\tonImport: (ids: identifier[]) => void;\r\n}\r\n\r\nfunction BulkImporter({ open, onClose, onImport }: IBulkImporterProps) {\r\n\tconst createIdentifiers = () => {\r\n\t\tconst identifiers: identifier[] = [];\r\n\t\tcardNames.split(\"\\n\").forEach((card) => {\r\n\t\t\tconst [num, ...name] = card.split(\" \");\r\n\t\t\tif (name) {\r\n\t\t\t\tfor (var i = 0; i < Number(num); ++i)\r\n\t\t\t\t\tidentifiers.push({\r\n\t\t\t\t\t\tname: name.join(\" \"),\r\n\t\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tidentifiers.push({\r\n\t\t\t\t\tname: num,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn identifiers;\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tonClose();\r\n\t};\r\n\r\n\tconst handleImport = () => {\r\n\t\tonImport(createIdentifiers());\r\n\t\tonClose();\r\n\t};\r\n\r\n\tconst [cardNames, setCardNames] = useState(\"\");\r\n\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\tclassName=\"import-dialog\"\r\n\t\t\topen={open}\r\n\t\t\tonClose={handleClose}\r\n\t\t\tmaxWidth=\"sm\"\r\n\t\t\tfullWidth={true}\r\n\t\t>\r\n\t\t\t<DialogTitle>\r\n\t\t\t\t<Box display=\"flex\" alignItems=\"center\">\r\n\t\t\t\t\t<Box flexGrow={1}>Bulk Import</Box>\r\n\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t<IconButton onClick={onClose}>\r\n\t\t\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Box>\r\n\t\t\t</DialogTitle>\r\n\t\t\t<DialogContent>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tclassName=\"import-text-field\"\r\n\t\t\t\t\tmultiline\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\trows=\"18\"\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tlabel=\"Card Names\"\r\n\t\t\t\t\tonChange={(e) => setCardNames(e.target.value)}\r\n\t\t\t\t></TextField>\r\n\t\t\t</DialogContent>\r\n\t\t\t<DialogActions>\r\n\t\t\t\t<Button autoFocus onClick={handleImport} color=\"primary\">\r\n\t\t\t\t\timport\r\n\t\t\t\t</Button>\r\n\t\t\t</DialogActions>\r\n\t\t</Dialog>\r\n\t);\r\n}\r\n\r\ninterface INameChangerProps {\r\n\tname?: string;\r\n\topen: boolean;\r\n\tonClose: () => void;\r\n\tonConfirm: (name: string) => void;\r\n}\r\n\r\nfunction NameChanger({ name, open, onClose, onConfirm }: INameChangerProps) {\r\n\tconst [newName, setnewName] = useState(name || \"\");\r\n\r\n\tconst handleClose = () => {\r\n\t\tonClose();\r\n\t};\r\n\r\n\tconst handleImport = () => {\r\n\t\tonConfirm(newName);\r\n\t\tonClose();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\tclassName=\"import-dialog\"\r\n\t\t\topen={open}\r\n\t\t\tonClose={handleClose}\r\n\t\t\tmaxWidth=\"sm\"\r\n\t\t\tfullWidth={true}\r\n\t\t>\r\n\t\t\t<DialogTitle>\r\n\t\t\t\t<Box display=\"flex\" alignItems=\"center\">\r\n\t\t\t\t\t<Box flexGrow={1}>Change Name</Box>\r\n\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t<IconButton onClick={onClose}>\r\n\t\t\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Box>\r\n\t\t\t</DialogTitle>\r\n\t\t\t<DialogContent>\r\n\t\t\t\t<TextField fullWidth onChange={(e) => setnewName(e.target.value)}>\r\n\t\t\t\t\t{name || \"\"}\r\n\t\t\t\t</TextField>\r\n\t\t\t</DialogContent>\r\n\t\t\t<DialogActions>\r\n\t\t\t\t<Button autoFocus onClick={handleImport} color=\"primary\">\r\n\t\t\t\t\tConfirm\r\n\t\t\t\t</Button>\r\n\t\t\t</DialogActions>\r\n\t\t</Dialog>\r\n\t);\r\n}\r\n\r\nexport { BulkImporter, NameChanger };\r\n","import { Instance, types as t } from \"mobx-state-tree\";\r\n\r\nconst CardImageModel = t.model(\"Image\", {\r\n\tsmall: t.string,\r\n\tnormal: t.string,\r\n\tlarge: t.string,\r\n\tpng: t.string,\r\n\tart_crop: t.string,\r\n\tborder_crop: t.string,\r\n});\r\n\r\nconst CardFaceModel = t.array(\r\n\tt.model({\r\n\t\tobject: t.string,\r\n\t\tname: t.string,\r\n\t\tmana_cost: t.string,\r\n\t\ttype_line: t.string,\r\n\t\toracle_text: t.string,\r\n\t\tcolors: t.array(t.string),\r\n\t\tflavor_text: t.string,\r\n\t\tartist: t.string,\r\n\t\tartist_id: t.string,\r\n\t\tillustration_id: t.string,\r\n\t\timage_uris: CardImageModel,\r\n\t})\r\n);\r\n\r\nconst CardModel = t.model(\"Card\", {\r\n\tid: t.string,\r\n\tname: t.string,\r\n\tquantity: t.optional(t.number, 1),\r\n\tisCommander: t.optional(t.boolean, false),\r\n\tlang: t.string,\r\n\treleased_at: t.string,\r\n\turi: t.string,\r\n\tscryfall_uri: t.string,\r\n\thighres_image: t.boolean,\r\n\timage_uris: t.maybe(CardImageModel),\r\n\tmana_cost: t.maybe(t.string),\r\n\tcmc: t.number,\r\n\ttype_line: t.string,\r\n\toracle_text: t.maybe(t.string),\r\n\tpower: t.optional(t.string, \"0\"),\r\n\ttoughness: t.optional(t.string, \"0\"),\r\n\tcolors: t.array(t.string),\r\n\tcolor_identity: t.array(t.string),\r\n\tkeywords: t.array(t.string),\r\n\tall_parts: t.array(\r\n\t\tt.model({\r\n\t\t\tobject: t.string,\r\n\t\t\tid: t.string,\r\n\t\t\tcomponent: t.string,\r\n\t\t\tname: t.string,\r\n\t\t\ttype_line: t.string,\r\n\t\t\turi: t.string,\r\n\t\t})\r\n\t),\r\n\tcard_faces: CardFaceModel,\r\n\tlegalities: t.model({\r\n\t\tstandard: t.string,\r\n\t\tfuture: t.string,\r\n\t\thistoric: t.string,\r\n\t\tgladiator: t.string,\r\n\t\tpioneer: t.string,\r\n\t\tmodern: t.string,\r\n\t\tlegacy: t.string,\r\n\t\tpauper: t.string,\r\n\t\tvintage: t.string,\r\n\t\tpenny: t.string,\r\n\t\tcommander: t.string,\r\n\t\tbrawl: t.string,\r\n\t\tduel: t.string,\r\n\t\toldschool: t.string,\r\n\t\tpremodern: t.string,\r\n\t}),\r\n\tset: t.string,\r\n\tset_name: t.string,\r\n\tset_type: t.string,\r\n\tset_uri: t.string,\r\n\tset_search_uri: t.string,\r\n\tscryfall_set_uri: t.string,\r\n\trulings_uri: t.string,\r\n\tprints_search_uri: t.string,\r\n\tcollector_number: t.string,\r\n\tdigital: t.boolean,\r\n\trarity: t.string,\r\n});\r\n\r\nexport default CardModel;\r\nexport interface Card extends Instance<typeof CardModel> {}\r\nexport type CardImage = typeof CardImageModel;\r\nexport type CardFace = typeof CardFaceModel;\r\n","import { cast, Instance, types as t } from \"mobx-state-tree\";\r\nimport CardModel, { Card } from \"./cardModel\";\r\n\r\nconst EditorModel = t\r\n\t.model({\r\n\t\tfocusedCard: t.optional(t.string, \"\"),\r\n\t\tbulkImportDialog: t.boolean,\r\n\t\tdeckName: t.string,\r\n\t\tdeck: t.optional(t.array(CardModel), []),\r\n\t})\r\n\t.actions((self) => ({\r\n\t\taddCard(card: Card) {\r\n\t\t\tif (self.deck.find((item) => item.name === card.name)) {\r\n\t\t\t\tself.deck.replace(\r\n\t\t\t\t\tself.deck.map((item) => {\r\n\t\t\t\t\t\tif (item.name === card.name) {\r\n\t\t\t\t\t\t\titem.quantity++;\r\n\t\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tself.deck.push(card);\r\n\t\t\t\tconst sorted = self.deck;\r\n\t\t\t\tsorted.sort((a, b) => (a.name > b.name ? 1 : -1));\r\n\t\t\t\tself.deck = sorted;\r\n\t\t\t}\r\n\t\t},\r\n\t}))\r\n\t.actions((self) => ({\r\n\t\tsetDeck(deck: Card[]) {\r\n\t\t\tself.deck = cast(deck);\r\n\t\t},\r\n\t\tsetDeckName(name: string) {\r\n\t\t\tself.deckName = name;\r\n\t\t},\r\n\t\taddCards(cards: Card[]) {\r\n\t\t\tcards.forEach((card) => self.addCard(card));\r\n\t\t},\r\n\t\tremoveCard(cardId: string) {\r\n\t\t\tif (self.deck.find((item) => item.id === cardId)) {\r\n\t\t\t\tself.deck.replace(\r\n\t\t\t\t\tself.deck.map((item) => {\r\n\t\t\t\t\t\tif (item.id === cardId) {\r\n\t\t\t\t\t\t\titem.quantity--;\r\n\t\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst deckList = self.deck;\r\n\t\t\t\tconst index = deckList\r\n\t\t\t\t\t.map((card: any) => (card.quantity <= 0 ? card.id : \"\"))\r\n\t\t\t\t\t.lastIndexOf(cardId);\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\tdeckList.splice(index, 1);\r\n\t\t\t\t\tself.deck = deckList;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tfocusCard(cardId: string) {\r\n\t\t\tself.focusedCard = cardId;\r\n\t\t},\r\n\t\tsetCommander(cardId: string) {\r\n\t\t\tself.deck.replace(\r\n\t\t\t\tself.deck.map((card) => {\r\n\t\t\t\t\tif (card.id === cardId) {\r\n\t\t\t\t\t\tcard.isCommander = true;\r\n\t\t\t\t\t\treturn card;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcard.isCommander = false;\r\n\t\t\t\t\treturn card;\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t},\r\n\t\tchangeEdition(newEdition: Card) {\r\n\t\t\tself.deck.replace(\r\n\t\t\t\tself.deck.map((card) => {\r\n\t\t\t\t\tif (card.name === newEdition.name) {\r\n\t\t\t\t\t\treturn newEdition;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn card;\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tself.focusedCard = newEdition.id;\r\n\t\t},\r\n\t}))\r\n\t.views((self) => ({}));\r\n\r\nexport default EditorModel;\r\nexport type EditorState = Instance<typeof EditorModel>;\r\n","import { Instance, onSnapshot, types as t } from \"mobx-state-tree\";\r\nimport { createContext, useContext } from \"react\";\r\nimport EditorModel from \"./editorModel\";\r\n\r\nconst RootModel = t.model(\"Root\", {\r\n\teditor: EditorModel,\r\n});\r\n\r\nlet initialState = RootModel.create({\r\n\teditor: {\r\n\t\tdeckName: \"\",\r\n\t\tbulkImportDialog: false,\r\n\t},\r\n});\r\n\r\nexport default RootModel;\r\n\r\nexport const rootStore = initialState;\r\n\r\nonSnapshot(rootStore, (snapshot) => {\r\n\tconsole.log(\"Snapshot: \", snapshot);\r\n\t// localStorage.setItem('rootState', JSON.stringify(snapshot));\r\n});\r\n\r\nexport type Root = Instance<typeof RootModel>;\r\nconst RootStoreContext = createContext<null | Root>(null);\r\n\r\nexport const Provider = RootStoreContext.Provider;\r\nexport function useMst() {\r\n\tconst store = useContext(RootStoreContext);\r\n\tif (store === null) {\r\n\t\tthrow new Error(\"Store cannot be null, please add a context provider\");\r\n\t}\r\n\treturn store;\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { Card } from \"src/mobx/cardModel\";\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\nimport { Breakpoint } from \"@material-ui/core/styles/createBreakpoints\";\r\nimport {\r\n\tList,\r\n\tListSubheader,\r\n\tListItem,\r\n\tListItemText,\r\n\tIconButton,\r\n\tListItemIcon,\r\n\tListItemSecondaryAction,\r\n} from \"@material-ui/core\";\r\nimport AddCircleRoundedIcon from \"@material-ui/icons/AddCircleRounded\";\r\nimport RemoveCircleRoundedIcon from \"@material-ui/icons/RemoveCircleRounded\";\r\n\r\nimport \"./styles.scss\";\r\nimport \"../../../../assets/mana-cost.css\";\r\nimport { useMst } from \"src/mobx\";\r\n\r\ninterface DeckListProps {\r\n\tname?: string;\r\n\tcards: any;\r\n\twidth: Breakpoint;\r\n}\r\n\r\nfunction DeckList({ name, cards, width }: DeckListProps) {\r\n\tconst groups: any = {\r\n\t\tcommander: \"Commanders\",\r\n\t\tplaneswalker: \"Planeswalkers\",\r\n\t\tcreature: \"Creatures\",\r\n\t\tsorcery: \"Sorceries\",\r\n\t\tinstant: \"Instants\",\r\n\t\tartifact: \"Artifacts\",\r\n\t\tenchantment: \"Enchantments\",\r\n\t\tland: \"Lands\",\r\n\t};\r\n\r\n\tconst groupedDeck = useMemo(() => {\r\n\t\tconst grouped: any = {};\r\n\t\tcards.forEach((card: Card) => {\r\n\t\t\tif (card.isCommander) {\r\n\t\t\t\tgrouped.commander\r\n\t\t\t\t\t? grouped.commander.push(card)\r\n\t\t\t\t\t: (grouped.commander = [card]);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t[\r\n\t\t\t\t\"land\",\r\n\t\t\t\t\"creature\",\r\n\t\t\t\t\"planeswalker\",\r\n\t\t\t\t\"artifact\",\r\n\t\t\t\t\"enchantment\",\r\n\t\t\t\t\"sorcery\",\r\n\t\t\t\t\"instant\",\r\n\t\t\t].some((type) => {\r\n\t\t\t\tif (card.type_line.toLowerCase().includes(type)) {\r\n\t\t\t\t\tgrouped[type] ? grouped[type].push(card) : (grouped[type] = [card]);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn grouped;\r\n\t}, [cards]);\r\n\r\n\treturn (\r\n\t\t<div className=\"deck-list-columns\">\r\n\t\t\t{Object.keys(groups).map(\r\n\t\t\t\t(key) =>\r\n\t\t\t\t\tgroupedDeck[key] && (\r\n\t\t\t\t\t\t<List\r\n\t\t\t\t\t\t\tdense\r\n\t\t\t\t\t\t\tclassName=\"deck-list\"\r\n\t\t\t\t\t\t\tsubheader={\r\n\t\t\t\t\t\t\t\t<ListSubheader\r\n\t\t\t\t\t\t\t\t\tclassName=\"deck-list-subheader\"\r\n\t\t\t\t\t\t\t\t\tcomponent=\"div\"\r\n\t\t\t\t\t\t\t\t\tid=\"nested-list-subheader\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div>{`${groups[key]} (${groupedDeck[key].length})`}</div>\r\n\t\t\t\t\t\t\t\t</ListSubheader>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{groupedDeck[key]?.map((card: Card) => (\r\n\t\t\t\t\t\t\t\t<CardListEntry card={card} />\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t)\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\ninterface CardListEntryProps {\r\n\tcard: Card;\r\n}\r\n\r\nfunction CardListEntry({ card }: CardListEntryProps) {\r\n\tconst { editor } = useMst();\r\n\r\n\tconst ManaCosts = () => {\r\n\t\t// tokenize mana cost\r\n\t\tconst matches = card.mana_cost?.match(/{([^{}]*)}/g);\r\n\t\treturn (\r\n\t\t\t<ListItemIcon className=\"card-mana\">\r\n\t\t\t\t{matches?.map((match) => {\r\n\t\t\t\t\tconst manas = match\r\n\t\t\t\t\t\t.substring(1, match.length - 1)\r\n\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t.replace(\"/\", \"\");\r\n\t\t\t\t\treturn <div className={`mana small s${manas}`} />;\r\n\t\t\t\t})}\r\n\t\t\t</ListItemIcon>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ListItem\r\n\t\t\tbutton\r\n\t\t\tdivider\r\n\t\t\tonClick={() => editor.focusCard(card.id)}\r\n\t\t\tclassName=\"deck-list-entry-container\"\r\n\t\t>\r\n\t\t\t<ListItemText\r\n\t\t\t\tclassName=\"card-quantity\"\r\n\t\t\t\tclasses={{ primary: \"card-text\" }}\r\n\t\t\t\tprimary={card.quantity}\r\n\t\t\t/>\r\n\t\t\t<ListItemText\r\n\t\t\t\tclasses={{ primary: \"card-name card-text\" }}\r\n\t\t\t\tprimary={card.name}\r\n\t\t\t/>\r\n\t\t\t<ManaCosts />\r\n\t\t\t<ListItemSecondaryAction className=\"deck-list-entry-actions\">\r\n\t\t\t\t<IconButton size=\"small\" onClick={() => editor.addCard(card)}>\r\n\t\t\t\t\t<AddCircleRoundedIcon color=\"primary\" />\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<IconButton size=\"small\" onClick={() => editor.removeCard(card.id)}>\r\n\t\t\t\t\t<RemoveCircleRoundedIcon color=\"secondary\" />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</ListItemSecondaryAction>\r\n\t\t</ListItem>\r\n\t);\r\n}\r\n\r\nexport default withWidth()(DeckList);\r\n","function generateTtsCard(\r\n\tid: number,\r\n\tname: string,\r\n\tfrontUrl: string,\r\n\tbackUrl: string\r\n) {\r\n\treturn {\r\n\t\tdata: {\r\n\t\t\tName: \"Card\",\r\n\t\t\tTransform: {\r\n\t\t\t\tposX: 0.0,\r\n\t\t\t\tposY: 0.0,\r\n\t\t\t\tposZ: 0.0,\r\n\t\t\t\trotX: 0.0,\r\n\t\t\t\trotY: 180.0,\r\n\t\t\t\trotZ: 180.0,\r\n\t\t\t\tscaleX: 1.0,\r\n\t\t\t\tscaleY: 1.0,\r\n\t\t\t\tscaleZ: 1.0,\r\n\t\t\t},\r\n\t\t\tNickname: name,\r\n\t\t\tDescription: \"\",\r\n\t\t\tGMNotes: \"\",\r\n\t\t\tLocked: false,\r\n\t\t\tGrid: true,\r\n\t\t\tSnap: true,\r\n\t\t\tIgnoreFoW: false,\r\n\t\t\tMeasureMovement: false,\r\n\t\t\tDragSelectable: true,\r\n\t\t\tAutoraise: true,\r\n\t\t\tSticky: true,\r\n\t\t\tTooltip: true,\r\n\t\t\tGridProjection: false,\r\n\t\t\tCardID: id * 100,\r\n\t\t\tLuaScript: \"\",\r\n\t\t\tLuaScriptState: \"\",\r\n\t\t\tXmlUI: \"\",\r\n\t\t},\r\n\t\tmodel: {\r\n\t\t\tFaceURL: frontUrl,\r\n\t\t\tBackURL: backUrl,\r\n\t\t\tNumWidth: 1,\r\n\t\t\tNumHeight: 1,\r\n\t\t\tBackIsHidden: true,\r\n\t\t\tUniqueBack: false,\r\n\t\t\tType: 0,\r\n\t\t},\r\n\t};\r\n}\r\n\r\nfunction generateTtsDoubleCard(\r\n\tid: number,\r\n\tname: string,\r\n\tdescription: string,\r\n\tfirstFrontUrl: string,\r\n\tsecondFrontUrl: string,\r\n\tbackUrl: string\r\n) {\r\n\treturn {\r\n\t\tdata: {\r\n\t\t\tName: \"Card\",\r\n\t\t\tTransform: {\r\n\t\t\t\tposX: 0.0,\r\n\t\t\t\tposY: 0.0,\r\n\t\t\t\tposZ: 0.0,\r\n\t\t\t\trotX: 0.0,\r\n\t\t\t\trotY: 180.0,\r\n\t\t\t\trotZ: 180.0,\r\n\t\t\t\tscaleX: 1.0,\r\n\t\t\t\tscaleY: 1.0,\r\n\t\t\t\tscaleZ: 1.0,\r\n\t\t\t},\r\n\t\t\tNickname: name,\r\n\t\t\tDescription: description,\r\n\t\t\tGMNotes: \"\",\r\n\t\t\tLocked: false,\r\n\t\t\tGrid: true,\r\n\t\t\tSnap: true,\r\n\t\t\tIgnoreFoW: false,\r\n\t\t\tMeasureMovement: false,\r\n\t\t\tDragSelectable: true,\r\n\t\t\tAutoraise: true,\r\n\t\t\tSticky: true,\r\n\t\t\tTooltip: true,\r\n\t\t\tGridProjection: false,\r\n\t\t\tCardID: id * 100,\r\n\t\t\tLuaScript: \"\",\r\n\t\t\tLuaScriptState: \"\",\r\n\t\t\tXmlUI: \"\",\r\n\t\t\tStates: {\r\n\t\t\t\t2: {\r\n\t\t\t\t\tGUID: \"81082a\",\r\n\t\t\t\t\tName: \"Card\",\r\n\t\t\t\t\tTransform: {\r\n\t\t\t\t\t\tposX: 0.0,\r\n\t\t\t\t\t\tposY: 0.0,\r\n\t\t\t\t\t\tposZ: 0.0,\r\n\t\t\t\t\t\trotX: 0.0,\r\n\t\t\t\t\t\trotY: 180.0,\r\n\t\t\t\t\t\trotZ: 180.0,\r\n\t\t\t\t\t\tscaleX: 1.0,\r\n\t\t\t\t\t\tscaleY: 1.0,\r\n\t\t\t\t\t\tscaleZ: 1.0,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tNickname: name,\r\n\t\t\t\t\tDescription: description,\r\n\t\t\t\t\tMemo: \"ea9c459a-6047-43aa-968f-a582be4000e8\",\r\n\t\t\t\t\tValue: 0,\r\n\t\t\t\t\tLocked: false,\r\n\t\t\t\t\tGrid: true,\r\n\t\t\t\t\tSnap: true,\r\n\t\t\t\t\tIgnoreFoW: false,\r\n\t\t\t\t\tMeasureMovement: false,\r\n\t\t\t\t\tDragSelectable: true,\r\n\t\t\t\t\tAutoraise: true,\r\n\t\t\t\t\tSticky: true,\r\n\t\t\t\t\tTooltip: true,\r\n\t\t\t\t\tGridProjection: false,\r\n\t\t\t\t\tHideWhenFaceDown: true,\r\n\t\t\t\t\tHands: true,\r\n\t\t\t\t\tCardID: id * 100,\r\n\t\t\t\t\tSidewaysCard: false,\r\n\t\t\t\t\tCustomDeck: {\r\n\t\t\t\t\t\t[id]: {\r\n\t\t\t\t\t\t\tFaceURL: secondFrontUrl,\r\n\t\t\t\t\t\t\tBackURL: backUrl,\r\n\t\t\t\t\t\t\tNumWidth: 1,\r\n\t\t\t\t\t\t\tNumHeight: 1,\r\n\t\t\t\t\t\t\tBackIsHidden: true,\r\n\t\t\t\t\t\t\tUniqueBack: false,\r\n\t\t\t\t\t\t\tType: 0,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tmodel: {\r\n\t\t\tFaceURL: firstFrontUrl,\r\n\t\t\tBackURL: backUrl,\r\n\t\t\tNumWidth: 1,\r\n\t\t\tNumHeight: 1,\r\n\t\t\tBackIsHidden: true,\r\n\t\t\tUniqueBack: false,\r\n\t\t\tType: 0,\r\n\t\t},\r\n\t};\r\n}\r\n\r\nfunction generateTtsDeckObject() {\r\n\treturn {\r\n\t\tName: \"DeckCustom\",\r\n\t\tTransform: {\r\n\t\t\tposX: 36.25,\r\n\t\t\tposY: 5.11282444,\r\n\t\t\tposZ: 6.645,\r\n\t\t\trotX: 0.0130744949,\r\n\t\t\trotY: 0.03566377,\r\n\t\t\trotZ: 180.000275,\r\n\t\t\tscaleX: 1.0,\r\n\t\t\tscaleY: 1.0,\r\n\t\t\tscaleZ: 1.0,\r\n\t\t},\r\n\t\tNickname: \"\",\r\n\t\tDescription: \"\",\r\n\t\tGMNotes: \"\",\r\n\t\tColorDiffuse: {\r\n\t\t\tr: 0.713235259,\r\n\t\t\tg: 0.713235259,\r\n\t\t\tb: 0.713235259,\r\n\t\t},\r\n\t\tLocked: false,\r\n\t\tGrid: true,\r\n\t\tSnap: true,\r\n\t\tIgnoreFoW: false,\r\n\t\tMeasureMovement: false,\r\n\t\tDragSelectable: true,\r\n\t\tAutoraise: true,\r\n\t\tSticky: true,\r\n\t\tTooltip: true,\r\n\t\tGridProjection: false,\r\n\t\tHideWhenFaceDown: true,\r\n\t\tHands: false,\r\n\t\tSidewaysCard: false,\r\n\t\tDeckIDs: [0],\r\n\t\tCustomDeck: {},\r\n\t\tLuaScript: \"\",\r\n\t\tLuaScriptState: \"\",\r\n\t\tXmlUI: \"\",\r\n\t\tContainedObjects: [{}],\r\n\t};\r\n}\r\n\r\nfunction generateTtsDeckBox() {\r\n\treturn {\r\n\t\tSaveName: \"\",\r\n\t\tGameMode: \"\",\r\n\t\tDate: \"\",\r\n\t\tGravity: 0.5,\r\n\t\tPlayArea: 0.5,\r\n\t\tGameType: \"\",\r\n\t\tGameComplexity: \"\",\r\n\t\tTags: [],\r\n\t\tTable: \"\",\r\n\t\tSky: \"\",\r\n\t\tNote: \"\",\r\n\t\tRules: \"\",\r\n\t\tTabStates: {},\r\n\t\tObjectStates: [\r\n\t\t\t{\r\n\t\t\t\tName: \"Custom_Model_Bag\",\r\n\t\t\t\tTransform: {\r\n\t\t\t\t\tposX: 35.4643936,\r\n\t\t\t\t\tposY: 2.8808763,\r\n\t\t\t\t\tposZ: 5.782154,\r\n\t\t\t\t\trotX: -2.01687612e-6,\r\n\t\t\t\t\trotY: -0.00141442078,\r\n\t\t\t\t\trotZ: 8.571432e-7,\r\n\t\t\t\t\tscaleX: 1.0,\r\n\t\t\t\t\tscaleY: 1.0,\r\n\t\t\t\t\tscaleZ: 1.0,\r\n\t\t\t\t},\r\n\t\t\t\tNickname: \"Card Deck\",\r\n\t\t\t\tDescription: \"\",\r\n\t\t\t\tGMNotes: \"\",\r\n\t\t\t\tColorDiffuse: {\r\n\t\t\t\t\tr: 0.9999998,\r\n\t\t\t\t\tg: 0.992163241,\r\n\t\t\t\t\tb: 0.9999998,\r\n\t\t\t\t},\r\n\t\t\t\tLocked: false,\r\n\t\t\t\tGrid: false,\r\n\t\t\t\tSnap: true,\r\n\t\t\t\tIgnoreFoW: false,\r\n\t\t\t\tMeasureMovement: false,\r\n\t\t\t\tDragSelectable: true,\r\n\t\t\t\tAutoraise: true,\r\n\t\t\t\tSticky: true,\r\n\t\t\t\tTooltip: true,\r\n\t\t\t\tGridProjection: false,\r\n\t\t\t\tHideWhenFaceDown: false,\r\n\t\t\t\tHands: false,\r\n\t\t\t\tMaterialIndex: -1,\r\n\t\t\t\tMeshIndex: -1,\r\n\t\t\t\tCustomMesh: {\r\n\t\t\t\t\tMeshURL: \"https://www.dropbox.com/s/fbpp2c2mzvdi2lg/DeckBox.obj?dl=1\",\r\n\t\t\t\t\tDiffuseURL:\r\n\t\t\t\t\t\t\"https://www.dropbox.com/s/o53xastt2846bmt/DeckBox.jpg?dl=1\",\r\n\t\t\t\t\tNormalURL: \"\",\r\n\t\t\t\t\tColliderURL: \"\",\r\n\t\t\t\t\tConvex: true,\r\n\t\t\t\t\tMaterialIndex: 2,\r\n\t\t\t\t\tTypeIndex: 6,\r\n\t\t\t\t\tCastShadows: true,\r\n\t\t\t\t},\r\n\t\t\t\tLuaScript: \"\",\r\n\t\t\t\tLuaScriptState: \"\",\r\n\t\t\t\tXmlUI: \"\",\r\n\t\t\t\tContainedObjects: [{}],\r\n\t\t\t},\r\n\t\t],\r\n\t\tLuaScript: \"\",\r\n\t\tLuaScriptState: \"\",\r\n\t\tXmlUI: \"\",\r\n\t\tVersionNumber: \"\",\r\n\t};\r\n}\r\n\r\nfunction generateTtsSingleCard(\r\n\tid: number,\r\n\tname: string,\r\n\tfrontUrl: string,\r\n\tbackUrl: string\r\n) {\r\n\treturn {\r\n\t\tName: \"Card\",\r\n\t\tTransform: {\r\n\t\t\tposX: -33.75,\r\n\t\t\tposY: 4.633549,\r\n\t\t\tposZ: -9.805,\r\n\t\t\trotX: 359.840668,\r\n\t\t\trotY: -0.0008630832,\r\n\t\t\trotZ: 359.920532,\r\n\t\t\tscaleX: 1.0,\r\n\t\t\tscaleY: 1.0,\r\n\t\t\tscaleZ: 1.0,\r\n\t\t},\r\n\t\tNickname: name,\r\n\t\tDescription: \"\",\r\n\t\tGMNotes: \"\",\r\n\t\tColorDiffuse: {\r\n\t\t\tr: 0.713235259,\r\n\t\t\tg: 0.713235259,\r\n\t\t\tb: 0.713235259,\r\n\t\t},\r\n\t\tLocked: false,\r\n\t\tGrid: true,\r\n\t\tSnap: true,\r\n\t\tIgnoreFoW: false,\r\n\t\tMeasureMovement: false,\r\n\t\tDragSelectable: true,\r\n\t\tAutoraise: true,\r\n\t\tSticky: true,\r\n\t\tTooltip: true,\r\n\t\tGridProjection: false,\r\n\t\tHideWhenFaceDown: true,\r\n\t\tHands: true,\r\n\t\tCardID: id * 100,\r\n\t\tSidewaysCard: false,\r\n\t\tCustomDeck: {\r\n\t\t\t[id]: {\r\n\t\t\t\tFaceURL: frontUrl,\r\n\t\t\t\tBackURL: backUrl,\r\n\t\t\t\tNumWidth: 1,\r\n\t\t\t\tNumHeight: 1,\r\n\t\t\t\tBackIsHidden: true,\r\n\t\t\t\tUniqueBack: false,\r\n\t\t\t\tType: 0,\r\n\t\t\t},\r\n\t\t},\r\n\t\tLuaScript: \"\",\r\n\t\tLuaScriptState: \"\",\r\n\t\tXmlUI: \"\",\r\n\t};\r\n}\r\n\r\nexport {\r\n\tgenerateTtsCard,\r\n\tgenerateTtsDoubleCard,\r\n\tgenerateTtsDeckObject,\r\n\tgenerateTtsDeckBox,\r\n\tgenerateTtsSingleCard,\r\n};\r\n","import {\r\n\tgenerateTtsCard,\r\n\tgenerateTtsDoubleCard,\r\n\tgenerateTtsDeckBox,\r\n\tgenerateTtsDeckObject,\r\n\tgenerateTtsSingleCard,\r\n} from \"./generateObjects\";\r\nimport Axios from \"axios\";\r\nimport { Card } from \"../mobx/cardModel\";\r\n\r\nconst defaltBackUrl =\r\n\t\"https://static.wikia.nocookie.net/mtgsalvation_gamepedia/images/f/f8/Magic_card_back.jpg/revision/latest?cb=20140813141013\";\r\n\r\nfunction getCardImageUrl(card: Card): string[] {\r\n\tif (card.image_uris) {\r\n\t\treturn [card.image_uris.normal];\r\n\t} else if (card.card_faces) {\r\n\t\treturn card.card_faces.map((face: any) => face.image_uris.normal);\r\n\t} else {\r\n\t\treturn [];\r\n\t}\r\n}\r\n\r\nfunction buildDeckObject(deckIds: number[], cardList: any[]) {\r\n\tlet deckObj: any = {};\r\n\r\n\tif (cardList.length > 1) {\r\n\t\tdeckObj = generateTtsDeckObject();\r\n\t\tdeckObj.DeckIDs = deckIds;\r\n\r\n\t\tdeckObj.CustomDeck = Object.assign(\r\n\t\t\t{},\r\n\t\t\t...cardList.map((card) => ({\r\n\t\t\t\t[card.data.CardID / 100]: card.model,\r\n\t\t\t}))\r\n\t\t);\r\n\r\n\t\tdeckObj.ContainedObjects = cardList.map((card) => card.data);\r\n\t} else {\r\n\t\tdeckObj = generateTtsSingleCard(\r\n\t\t\tdeckIds[0],\r\n\t\t\tcardList[0].data.Nickname,\r\n\t\t\tcardList[0].model.FaceURL,\r\n\t\t\tcardList[0].model.BackURL\r\n\t\t);\r\n\t}\r\n\r\n\treturn deckObj;\r\n}\r\n\r\nexport default async function generateTtsDeck(\r\n\ttitle: string,\r\n\tdeckList: any[],\r\n\tbackUrl: string = defaltBackUrl\r\n) {\r\n\tconst deckIds: number[] = [];\r\n\tconst commanderIds: number[] = [];\r\n\tconst tokenIds: number[] = [];\r\n\r\n\tlet tokenList: any[] = [];\r\n\tconst commanderList: any[] = [];\r\n\tlet id: number = 1;\r\n\r\n\tconst ttsCardList = deckList.flatMap((card) => {\r\n\t\t// check for any tokens\r\n\t\tif (card.all_parts) {\r\n\t\t\tcard.all_parts.forEach((part: any) => {\r\n\t\t\t\tif (part.component === \"token\" && !tokenList.includes(part.id)) {\r\n\t\t\t\t\ttokenList.push(part.id);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tconst cardImage = getCardImageUrl(card);\r\n\t\t// chack for commander\r\n\t\tif (card.isCommander) {\r\n\t\t\tcommanderIds.push(id);\r\n\t\t\tcommanderList.push(generateTtsCard(id, card.name, cardImage[0], backUrl));\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tdeckIds.push(id * 100);\r\n\t\t// check if the card is double sided\r\n\t\tif (cardImage.length > 1) {\r\n\t\t\treturn generateTtsDoubleCard(\r\n\t\t\t\tid++,\r\n\t\t\t\tcard.name,\r\n\t\t\t\tcard.oracle_text,\r\n\t\t\t\tcardImage[0],\r\n\t\t\t\tcardImage[1],\r\n\t\t\t\tbackUrl\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn generateTtsCard(id++, card.name, cardImage[0], backUrl);\r\n\t});\r\n\r\n\tlet deckBox = generateTtsDeckBox();\r\n\r\n\t// set deck name\r\n\tdeckBox.ObjectStates[0].Nickname = title;\r\n\r\n\t// main deck\r\n\tconst mainDeck = buildDeckObject(deckIds, ttsCardList);\r\n\tdeckBox.ObjectStates[0].ContainedObjects = [mainDeck];\r\n\r\n\t// double sided deck\r\n\tif (commanderList.length > 0) {\r\n\t\tconst commanderDeck = buildDeckObject(commanderIds, commanderList);\r\n\t\tdeckBox.ObjectStates[0].ContainedObjects.push(commanderDeck);\r\n\t}\r\n\r\n\t// first fetch token data\r\n\tif (tokenList.length > 0) {\r\n\t\tconst res = await Axios.post(\r\n\t\t\t\"https://api.scryfall.com/cards/collection\",\r\n\t\t\t{\r\n\t\t\t\tidentifiers: tokenList.map((card: any) => ({\r\n\t\t\t\t\tid: card,\r\n\t\t\t\t})),\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\t// map tokens\r\n\t\ttokenList = res.data.data.map((card: any) => {\r\n\t\t\ttokenIds.push(id * 100);\r\n\t\t\treturn generateTtsCard(id++, card.name, card.image_uris.normal, backUrl);\r\n\t\t});\r\n\r\n\t\tconst tokenDeck = buildDeckObject(tokenIds, tokenList);\r\n\t\tdeckBox.ObjectStates[0].ContainedObjects.push(tokenDeck);\r\n\t}\r\n\r\n\treturn deckBox;\r\n}\r\n","import { TableRow } from \"@material-ui/core\";\r\nimport { TableCell } from \"@material-ui/core\";\r\nimport {\r\n\tFab,\r\n\tPopper,\r\n\tPaper,\r\n\tFade,\r\n\tTable,\r\n\tTableContainer,\r\n\tTableBody,\r\n} from \"@material-ui/core\";\r\nimport PopupState, { bindPopper, bindToggle } from \"material-ui-popup-state\";\r\nimport React from \"react\";\r\n\r\nfunction processDeck(deck: any[]) {\r\n\tlet data: any = {};\r\n\tdeck.forEach((card) => {\r\n\t\t// eslint-disable-next-line\r\n\t\tlet [msg, superType, basic, type] = card.type_line\r\n\t\t\t.split(\" — \")[0]\r\n\t\t\t.match(/(Legendary)?(Basic)?([^/]*).*/);\r\n\t\ttype = type.trim();\r\n\t\tif (data[type]) {\r\n\t\t\tdata[type]++;\r\n\t\t} else {\r\n\t\t\tdata[type] = 1;\r\n\t\t}\r\n\t});\r\n\r\n\treturn Object.entries(data).sort(([keyA, valueA], [keyB, valueB]) => {\r\n\t\tif (keyA < keyB) return -1;\r\n\t\tif (keyA > keyB) return 1;\r\n\t\treturn 0;\r\n\t});\r\n}\r\n\r\ninterface IDeckDataProps {\r\n\tdeck?: any[];\r\n}\r\n\r\nexport default function CardCounter({ deck }: IDeckDataProps) {\r\n\tlet deckData: any = {};\r\n\r\n\tif (deck) deckData = processDeck(deck);\r\n\r\n\treturn (\r\n\t\t<PopupState variant=\"popper\" popupId=\"demoPopover\">\r\n\t\t\t{(popupState) => (\r\n\t\t\t\t<div className=\"deck-counter\">\r\n\t\t\t\t\t<Fab color=\"primary\" aria-label=\"add\" {...bindToggle(popupState)}>\r\n\t\t\t\t\t\t{deck?.length || 0}\r\n\t\t\t\t\t</Fab>\r\n\t\t\t\t\t<Popper\r\n\t\t\t\t\t\t{...bindPopper(popupState)}\r\n\t\t\t\t\t\tplacement=\"top-end\"\r\n\t\t\t\t\t\ttransition\r\n\t\t\t\t\t\tdisablePortal={true}\r\n\t\t\t\t\t\tmodifiers={{\r\n\t\t\t\t\t\t\toffset: {\r\n\t\t\t\t\t\t\t\tenabled: true,\r\n\t\t\t\t\t\t\t\toffset: \"0, 10\",\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{({ TransitionProps }) => (\r\n\t\t\t\t\t\t\t<Fade {...TransitionProps} timeout={350}>\r\n\t\t\t\t\t\t\t\t<TableContainer component={Paper} style={{ minWidth: \"240px\" }}>\r\n\t\t\t\t\t\t\t\t\t<Table>\r\n\t\t\t\t\t\t\t\t\t\t<TableBody>\r\n\t\t\t\t\t\t\t\t\t\t\t{deckData.map(([key, value]: any[]) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<TableRow key={key}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell component=\"th\" scope=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{key}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<TableCell align=\"right\">{value}</TableCell>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</TableBody>\r\n\t\t\t\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t\t\t\t</TableContainer>\r\n\t\t\t\t\t\t\t</Fade>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Popper>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</PopupState>\r\n\t);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { BulkImporter, NameChanger } from \"./deckDialogs\";\r\nimport DeckList from \"./deckDisplay/deckList\";\r\nimport { identifier } from \"../../types\";\r\nimport Axios from \"axios\";\r\nimport { Button, Menu, MenuItem, Typography } from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\nimport generateTtsDeck from \"../../ttsGenerator/generateDeck\";\r\nimport FileSaver from \"file-saver\";\r\nimport CardCounter from \"./deckCardCounter\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { Root } from \"../../mobx\";\r\nimport { getSnapshot } from \"mobx-state-tree\";\r\n\r\ninterface DeckViewState {\r\n\timporterOpen: boolean;\r\n\tactionAnchorEl: any;\r\n\tdeckTitle: string;\r\n\tchangeNameOpen: boolean;\r\n}\r\n\r\ninterface DeckViewProps {\r\n\trootStore?: Root;\r\n}\r\n\r\n@inject(\"rootStore\")\r\n@observer\r\nexport default class DeckView extends Component<DeckViewProps, DeckViewState> {\r\n\tstate = {\r\n\t\timporterOpen: false,\r\n\t\tchangeNameOpen: false,\r\n\t\tactionAnchorEl: null,\r\n\t\tdeckTitle: \"\",\r\n\t};\r\n\r\n\tbulkImportCards = async (identifiers: identifier[]) => {\r\n\t\tconst cards: any[] = [];\r\n\t\tlet remain = identifiers.length;\r\n\t\t// scryfall has a limit of 75 cards\r\n\t\twhile (remain > 0) {\r\n\t\t\tconst fetched = identifiers.length - remain;\r\n\t\t\tconst res = await Axios.post(\r\n\t\t\t\t\"https://api.scryfall.com/cards/collection\",\r\n\t\t\t\t{\r\n\t\t\t\t\tidentifiers: identifiers.slice(\r\n\t\t\t\t\t\tfetched,\r\n\t\t\t\t\t\tfetched + 75 < identifiers.length\r\n\t\t\t\t\t\t\t? fetched + 75\r\n\t\t\t\t\t\t\t: identifiers.length\r\n\t\t\t\t\t),\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tcards.push(...res.data.data);\r\n\r\n\t\t\tremain -= 75;\r\n\t\t}\r\n\r\n\t\tthis.props.rootStore?.editor.addCards(cards);\r\n\t};\r\n\r\n\timportAction = () => {\r\n\t\tthis.setState({ importerOpen: true, actionAnchorEl: null });\r\n\t};\r\n\r\n\texportAction = async () => {\r\n\t\tconst blob = new Blob(\r\n\t\t\t[\r\n\t\t\t\tJSON.stringify(\r\n\t\t\t\t\tawait generateTtsDeck(\r\n\t\t\t\t\t\tthis.props.rootStore!.editor.deckName,\r\n\t\t\t\t\t\tthis.props.rootStore!.editor.deck\r\n\t\t\t\t\t)\r\n\t\t\t\t),\r\n\t\t\t],\r\n\t\t\t{ type: \"application/json;charset=utf-8\" }\r\n\t\t);\r\n\t\tconsole.log(\r\n\t\t\tJSON.stringify(\r\n\t\t\t\tawait generateTtsDeck(\r\n\t\t\t\t\tthis.props.rootStore!.editor.deckName,\r\n\t\t\t\t\tthis.props.rootStore!.editor.deck\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tFileSaver.saveAs(blob, `${this.props.rootStore!.editor.deckName}.json`);\r\n\t};\r\n\r\n\tchangeNameAction = () => {\r\n\t\tthis.setState({ changeNameOpen: true });\r\n\t};\r\n\r\n\thandleCardDelete = (cardId: string) => {\r\n\t\tthis.props.rootStore!.editor.removeCard(cardId);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst deck = this.props.rootStore\r\n\t\t\t? getSnapshot(this.props.rootStore.editor.deck)\r\n\t\t\t: [];\r\n\r\n\t\tconst ActionMenu = () => (\r\n\t\t\t<Menu\r\n\t\t\t\tid=\"simple-menu\"\r\n\t\t\t\tanchorEl={this.state.actionAnchorEl}\r\n\t\t\t\tkeepMounted\r\n\t\t\t\topen={Boolean(this.state.actionAnchorEl)}\r\n\t\t\t\tonClose={() => this.setState({ actionAnchorEl: null })}\r\n\t\t\t>\r\n\t\t\t\t<MenuItem onClick={this.changeNameAction}>Change Name</MenuItem>\r\n\t\t\t\t<MenuItem onClick={this.importAction}>Bulk Import</MenuItem>\r\n\t\t\t\t<MenuItem onClick={this.exportAction}>Export to tts</MenuItem>\r\n\t\t\t</Menu>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"deck-view-container\">\r\n\t\t\t\t<BulkImporter\r\n\t\t\t\t\topen={this.state.importerOpen}\r\n\t\t\t\t\tonClose={() => {\r\n\t\t\t\t\t\tthis.setState({ importerOpen: false });\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonImport={this.bulkImportCards}\r\n\t\t\t\t/>\r\n\t\t\t\t<NameChanger\r\n\t\t\t\t\tname={this.state.deckTitle}\r\n\t\t\t\t\topen={this.state.changeNameOpen}\r\n\t\t\t\t\tonClose={() => {\r\n\t\t\t\t\t\tthis.setState({ changeNameOpen: false });\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonConfirm={(newName) => {\r\n\t\t\t\t\t\tthis.setState({ deckTitle: newName });\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"deck-view-title\"></div>\r\n\t\t\t\t<div className=\"deck-menu\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tonClick={(e) => this.setState({ actionAnchorEl: e.currentTarget })}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tActions\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<ActionMenu />\r\n\t\t\t\t</div>\r\n\t\t\t\t<Typography\r\n\t\t\t\t\tvariant=\"h2\"\r\n\t\t\t\t\talign=\"left\"\r\n\t\t\t\t\tparagraph\r\n\t\t\t\t\tclassName=\"deck-title\"\r\n\t\t\t\t\tstyle={{ color: \"white\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{this.state.deckTitle || \"\"}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<DeckList cards={deck}></DeckList>\r\n\t\t\t\t<CardCounter deck={this.props.rootStore?.editor.deck} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import { Box } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\ninterface TabPanelProps {\r\n\tchildren?: React.ReactNode;\r\n\tindex: any;\r\n\tvalue: any;\r\n}\r\n\r\nexport default function TabPanel(props: TabPanelProps) {\r\n\tconst { children, value, index, ...other } = props;\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\trole=\"tabpanel\"\r\n\t\t\thidden={value !== index}\r\n\t\t\tid={`simple-tabpanel-${index}`}\r\n\t\t\taria-labelledby={`simple-tab-${index}`}\r\n\t\t\t{...other}\r\n\t\t>\r\n\t\t\t{value === index && <Box>{children}</Box>}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import {\r\n\tTypography,\r\n\tTab,\r\n\tTabs,\r\n\tDivider,\r\n\tGridList,\r\n\tTooltip,\r\n\tGridListTile,\r\n\tButton,\r\n} from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport { Card } from \"../../mobx/cardModel\";\r\nimport TabPanel from \"../../util/tabPanel\";\r\nimport Axios from \"axios\";\r\nimport CheckRoundedIcon from \"@material-ui/icons/CheckRounded\";\r\n\r\ninterface CardDetailProps {\r\n\tcard?: Card;\r\n\tonSetCommander: (cardId: string) => void;\r\n\tonEditionChange: (newEdition: Card) => void;\r\n}\r\n\r\nexport default class CardDetail extends Component<CardDetailProps> {\r\n\tstate = {\r\n\t\tvalue: 0,\r\n\t\teditions: [],\r\n\t\tselected: \"\",\r\n\t};\r\n\r\n\tasync componentDidUpdate(prevProps: CardDetailProps) {\r\n\t\tif (prevProps !== this.props && this.props.card) {\r\n\t\t\tconst res = await Axios.get(\"https://api.scryfall.com/cards/search\", {\r\n\t\t\t\tparams: {\r\n\t\t\t\t\tq: `!\"${this.props.card?.name}\"`,\r\n\t\t\t\t\tunique: \"prints\",\r\n\t\t\t\t\torder: \"released\",\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\tthis.setState({ editions: res.data.data, selected: this.props.card?.id });\r\n\t\t}\r\n\t}\r\n\r\n\thandleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n\t\tthis.setState({ value: newValue });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst card = this.props.card;\r\n\r\n\t\tconst CardInfo = () => (\r\n\t\t\t<div className=\"card-detail-info-container\">\r\n\t\t\t\t<Typography variant=\"h5\">{card?.name}</Typography>\r\n\t\t\t\t<Divider />\r\n\t\t\t\t<img\r\n\t\t\t\t\tstyle={{ width: \"100%\" }}\r\n\t\t\t\t\tsrc={card?.image_uris?.normal}\r\n\t\t\t\t\talt={card?.name}\r\n\t\t\t\t\tclassName=\"card-detail-image\"\r\n\t\t\t\t/>\r\n\t\t\t\t<Divider />\r\n\t\t\t\t<Typography>{card?.type_line}</Typography>\r\n\t\t\t\t{((card?.type_line.includes(\"Legendary \") &&\r\n\t\t\t\t\tcard?.type_line.includes(\"Creature\")) ||\r\n\t\t\t\t\tcard?.type_line.includes(\"Planeswalker\")) && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName=\"card-detail-set-commander\"\r\n\t\t\t\t\t\t\tonClick={() => this.props.onSetCommander(card.id)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tSet as Commander\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t\tconst EditionSelect = () =>\r\n\t\t\tthis.state.editions && (\r\n\t\t\t\t<div className=\"card-detail-edition-container\">\r\n\t\t\t\t\t<GridList cellHeight={\"auto\"} spacing={8} cols={2}>\r\n\t\t\t\t\t\t{this.state.editions?.map((card: Card, index: number) => (\r\n\t\t\t\t\t\t\t<GridListTile key={index}>\r\n\t\t\t\t\t\t\t\t<Tooltip title={card.set_name}>\r\n\t\t\t\t\t\t\t\t\t<div onClick={() => this.props.onEditionChange(card)}>\r\n\t\t\t\t\t\t\t\t\t\t{card.card_faces && card.card_faces.length > 0 ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: \"11px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={card.card_faces[0].image_uris?.normal}\r\n\t\t\t\t\t\t\t\t\t\t\t\talt={card.name}\r\n\t\t\t\t\t\t\t\t\t\t\t></img>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: \"11px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={card.image_uris?.normal}\r\n\t\t\t\t\t\t\t\t\t\t\t\talt={card.name}\r\n\t\t\t\t\t\t\t\t\t\t\t></img>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t{card.id === this.props.card?.id && (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-detail-edition-selected\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckRoundedIcon color=\"primary\" fontSize=\"large\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</GridListTile>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</GridList>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"card-detail-container\">\r\n\t\t\t\t<Tabs\r\n\t\t\t\t\tvalue={this.state.value}\r\n\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\tindicatorColor=\"primary\"\r\n\t\t\t\t\tclassName=\"card-detail-tabs\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<Tab label=\"Details\" aria-label=\"selected card\" />\r\n\t\t\t\t\t<Tab label=\"Edition\" aria-label=\"search\" />\r\n\t\t\t\t</Tabs>\r\n\t\t\t\t<TabPanel value={this.state.value} index={0}>\r\n\t\t\t\t\t<CardInfo />\r\n\t\t\t\t</TabPanel>\r\n\t\t\t\t<TabPanel value={this.state.value} index={1}>\r\n\t\t\t\t\t<EditionSelect />\r\n\t\t\t\t</TabPanel>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport BookIcon from \"@material-ui/icons/Book\";\r\nimport FindInPageIcon from \"@material-ui/icons/FindInPage\";\r\nimport CardDetail from \"./cardDetail\";\r\nimport TabPanel from \"../../util/tabPanel\";\r\nimport { useMst } from \"../../mobx\";\r\nimport { Card } from \"../../mobx/cardModel\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst sidebarWitdh = \"400px\";\r\n\r\nfunction EditorSidebar() {\r\n\tconst [value, setValue] = React.useState(0);\r\n\tconst store = useMst();\r\n\r\n\tconst handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n\t\tsetValue(newValue);\r\n\t};\r\n\r\n\tconst focusedCardId = store.editor.focusedCard;\r\n\tconst focusedCard = store.editor.deck.find(\r\n\t\t(card: Card) => card.id === focusedCardId\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div style={{ position: \"relative\", minWidth: sidebarWitdh }}>\r\n\t\t\t<div className=\"editor-sidebar-container\" style={{ width: sidebarWitdh }}>\r\n\t\t\t\t<Tabs\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\torientation=\"vertical\"\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tindicatorColor=\"secondary\"\r\n\t\t\t\t\tclassName=\"editor-sidebar-tabs\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<Tab\r\n\t\t\t\t\t\ticon={<BookIcon style={{ fill: \"white\" }} />}\r\n\t\t\t\t\t\taria-label=\"selected card\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Tab\r\n\t\t\t\t\t\ticon={<FindInPageIcon style={{ fill: \"white\" }} />}\r\n\t\t\t\t\t\taria-label=\"search\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Tabs>\r\n\t\t\t\t<TabPanel value={value} index={0}>\r\n\t\t\t\t\t<CardDetail\r\n\t\t\t\t\t\tcard={focusedCard}\r\n\t\t\t\t\t\tonSetCommander={(id) => store.editor.setCommander(id)}\r\n\t\t\t\t\t\tonEditionChange={(newEdition) =>\r\n\t\t\t\t\t\t\tstore.editor.changeEdition(newEdition)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</TabPanel>\r\n\t\t\t\t<TabPanel value={value} index={1}>\r\n\t\t\t\t\tSearch\r\n\t\t\t\t</TabPanel>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default observer(EditorSidebar);\r\n","import React, { Component } from \"react\";\r\nimport DeckView from \"../deck/deckView\";\r\nimport EditorSidebar from \"./editorSidebar\";\r\nimport \"./styles.scss\";\r\n\r\nexport default class DeckEditor extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"editor-container\">\r\n\t\t\t\t<EditorSidebar />\r\n\t\t\t\t<DeckView />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import \"./App.css\";\nimport \"fontsource-roboto\";\nimport AppHeader from \"./components/header/appHeader\";\nimport DeckEditor from \"./components/editor/deckEditor\";\nimport React from \"react\";\nimport { rootStore, Provider as ContextProvider } from \"./mobx\";\nimport { Provider } from \"mobx-react\";\n\nfunction App() {\n\treturn (\n\t\t<Provider rootStore={rootStore}>\n\t\t\t<ContextProvider value={rootStore}>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<AppHeader />\n\t\t\t\t\t<DeckEditor />\n\t\t\t\t</div>\n\t\t\t</ContextProvider>\n\t\t</Provider>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}