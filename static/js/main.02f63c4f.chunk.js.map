{"version":3,"sources":["mobx/cardModel.ts","mobx/editorModel.ts","mobx/index.ts","components/header/appHeader.tsx","components/deck/deckDialogs.tsx","components/deck/deckDisplay/deckList/index.tsx","ttsGenerator/generateObjects.ts","ttsGenerator/generateDeck.ts","components/deck/deckCardCounter.tsx","components/deck/deckView.tsx","util/tabPanel.tsx","components/editor/cardDetail.tsx","components/editor/editorSidebar.tsx","components/editor/deckEditor.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["CardImageModel","t","model","small","string","normal","large","png","art_crop","border_crop","CardFaceModel","array","object","name","mana_cost","type_line","oracle_text","colors","flavor_text","artist","artist_id","illustration_id","image_uris","CardModel","id","quantity","optional","number","isCommander","boolean","lang","released_at","uri","scryfall_uri","highres_image","maybe","cmc","power","toughness","color_identity","keywords","all_parts","component","card_faces","legalities","standard","future","historic","gladiator","pioneer","modern","legacy","pauper","vintage","penny","commander","brawl","duel","oldschool","premodern","set","set_name","set_type","set_uri","set_search_uri","scryfall_set_uri","rulings_uri","prints_search_uri","collector_number","digital","rarity","EditorModel","focusedCard","bulkImportDialog","deckName","deck","actions","self","addCard","card","find","item","replace","map","push","sorted","sort","a","b","setDeck","cast","setDeckName","addCards","cards","forEach","removeCard","cardId","deckList","index","lastIndexOf","splice","focusCard","setCommander","changeEdition","newEdition","clearDeck","views","RootModel","editor","initialState","create","localStorage","getItem","JSON","parse","rootStore","onSnapshot","snapshot","setItem","stringify","RootStoreContext","createContext","Provider","useMst","store","useContext","Error","useStyles","makeStyles","textTransform","AppHeader","classes","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","className","BulkImporter","open","onClose","onImport","useState","cardNames","setCardNames","Dialog","maxWidth","fullWidth","DialogTitle","Box","display","alignItems","flexGrow","onClick","DialogContent","TextField","multiline","rows","label","onChange","e","target","value","DialogActions","Button","autoFocus","identifiers","split","match","num","console","log","i","Number","Object","assign","toLowerCase","substring","length","createIdentifiers","NameChanger","newName","setnewName","CardListEntry","ManaCosts","matches","ListItemIcon","manas","ListItem","button","divider","ListItemText","primary","ListItemSecondaryAction","size","withWidth","width","groups","planeswalker","creature","sorcery","instant","artifact","enchantment","land","groupedDeck","useMemo","grouped","some","type","includes","style","columnCount","isWidthUp","keys","key","List","dense","subheader","ListSubheader","generateTtsCard","frontUrl","backUrl","data","Name","Transform","posX","posY","posZ","rotX","rotY","rotZ","scaleX","scaleY","scaleZ","Nickname","Description","GMNotes","Locked","Grid","Snap","IgnoreFoW","MeasureMovement","DragSelectable","Autoraise","Sticky","Tooltip","GridProjection","CardID","LuaScript","LuaScriptState","XmlUI","FaceURL","BackURL","NumWidth","NumHeight","BackIsHidden","UniqueBack","Type","generateTtsDoubleCard","description","firstFrontUrl","secondFrontUrl","States","2","GUID","Memo","Value","HideWhenFaceDown","Hands","SidewaysCard","CustomDeck","defaltBackUrl","getCardImageUrl","face","buildDeckObject","deckIds","cardList","deckObj","ColorDiffuse","r","g","DeckIDs","ContainedObjects","generateTtsDeck","title","commanderIds","tokenIds","tokenList","commanderList","ttsCardList","flatMap","part","cardImage","deckBox","SaveName","GameMode","Date","Gravity","PlayArea","GameType","GameComplexity","Tags","Table","Sky","Note","Rules","TabStates","ObjectStates","MaterialIndex","MeshIndex","CustomMesh","MeshURL","DiffuseURL","NormalURL","ColliderURL","Convex","TypeIndex","CastShadows","VersionNumber","mainDeck","commanderDeck","Axios","post","headers","res","tokenDeck","CardCounter","count","card_num","Fab","DeckView","inject","observer","state","importerOpen","changeNameOpen","actionAnchorEl","deckTitle","bulkImportCards","remain","fetched","slice","props","importAction","setState","exportAction","Blob","blob","FileSaver","saveAs","changeNameAction","clearAction","handleCardDelete","this","getSnapshot","ActionMenu","anchorEl","keepMounted","Boolean","MenuItem","currentTarget","align","paragraph","Component","TabPanel","children","other","role","hidden","aria-labelledby","CardDetail","editions","selected","handleChange","event","newValue","prevProps","get","params","q","unique","order","CardInfo","Divider","height","borderRadius","src","alt","onSetCommander","EditionSelect","GridList","cellHeight","spacing","cols","GridListTile","onEditionChange","fontSize","Tabs","indicatorColor","Tab","sidebarWitdh","React","setValue","focusedCardId","minWidth","orientation","icon","fill","DeckEditor","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02f63c4f.chunk.js","sourcesContent":["import { Instance, types as t } from \"mobx-state-tree\";\r\n\r\nconst CardImageModel = t.model(\"Image\", {\r\n\tsmall: t.string,\r\n\tnormal: t.string,\r\n\tlarge: t.string,\r\n\tpng: t.string,\r\n\tart_crop: t.string,\r\n\tborder_crop: t.string,\r\n});\r\n\r\nconst CardFaceModel = t.array(\r\n\tt.model({\r\n\t\tobject: t.string,\r\n\t\tname: t.string,\r\n\t\tmana_cost: t.string,\r\n\t\ttype_line: t.string,\r\n\t\toracle_text: t.string,\r\n\t\tcolors: t.array(t.string),\r\n\t\tflavor_text: t.string,\r\n\t\tartist: t.string,\r\n\t\tartist_id: t.string,\r\n\t\tillustration_id: t.string,\r\n\t\timage_uris: CardImageModel,\r\n\t})\r\n);\r\n\r\nconst CardModel = t.model(\"Card\", {\r\n\tid: t.string,\r\n\tname: t.string,\r\n\tquantity: t.optional(t.number, 1),\r\n\tisCommander: t.optional(t.boolean, false),\r\n\tlang: t.string,\r\n\treleased_at: t.string,\r\n\turi: t.string,\r\n\tscryfall_uri: t.string,\r\n\thighres_image: t.boolean,\r\n\timage_uris: t.maybe(CardImageModel),\r\n\tmana_cost: t.maybe(t.string),\r\n\tcmc: t.number,\r\n\ttype_line: t.string,\r\n\toracle_text: t.maybe(t.string),\r\n\tpower: t.optional(t.string, \"0\"),\r\n\ttoughness: t.optional(t.string, \"0\"),\r\n\tcolors: t.array(t.string),\r\n\tcolor_identity: t.array(t.string),\r\n\tkeywords: t.array(t.string),\r\n\tall_parts: t.array(\r\n\t\tt.model({\r\n\t\t\tobject: t.string,\r\n\t\t\tid: t.string,\r\n\t\t\tcomponent: t.string,\r\n\t\t\tname: t.string,\r\n\t\t\ttype_line: t.string,\r\n\t\t\turi: t.string,\r\n\t\t})\r\n\t),\r\n\tcard_faces: CardFaceModel,\r\n\tlegalities: t.model({\r\n\t\tstandard: t.string,\r\n\t\tfuture: t.string,\r\n\t\thistoric: t.string,\r\n\t\tgladiator: t.string,\r\n\t\tpioneer: t.string,\r\n\t\tmodern: t.string,\r\n\t\tlegacy: t.string,\r\n\t\tpauper: t.string,\r\n\t\tvintage: t.string,\r\n\t\tpenny: t.string,\r\n\t\tcommander: t.string,\r\n\t\tbrawl: t.string,\r\n\t\tduel: t.string,\r\n\t\toldschool: t.string,\r\n\t\tpremodern: t.string,\r\n\t}),\r\n\tset: t.string,\r\n\tset_name: t.string,\r\n\tset_type: t.string,\r\n\tset_uri: t.string,\r\n\tset_search_uri: t.string,\r\n\tscryfall_set_uri: t.string,\r\n\trulings_uri: t.string,\r\n\tprints_search_uri: t.string,\r\n\tcollector_number: t.string,\r\n\tdigital: t.boolean,\r\n\trarity: t.string,\r\n});\r\n\r\nexport default CardModel;\r\nexport interface Card extends Instance<typeof CardModel> {}\r\nexport type CardImage = typeof CardImageModel;\r\nexport type CardFace = typeof CardFaceModel;\r\n","import { cast, Instance, types as t } from \"mobx-state-tree\";\r\nimport CardModel, { Card } from \"./cardModel\";\r\n\r\nconst EditorModel = t\r\n\t.model({\r\n\t\tfocusedCard: t.optional(t.string, \"\"),\r\n\t\tbulkImportDialog: t.boolean,\r\n\t\tdeckName: t.string,\r\n\t\tdeck: t.optional(t.array(CardModel), []),\r\n\t})\r\n\t.actions((self) => ({\r\n\t\taddCard(card: Card) {\r\n\t\t\tif (self.deck.find((item) => item.name === card.name)) {\r\n\t\t\t\tself.deck.replace(\r\n\t\t\t\t\tself.deck.map((item) => {\r\n\t\t\t\t\t\tif (item.name === card.name) {\r\n\t\t\t\t\t\t\titem.quantity++;\r\n\t\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tself.deck.push(card);\r\n\t\t\t\tconst sorted = self.deck;\r\n\t\t\t\tsorted.sort((a, b) => (a.name > b.name ? 1 : -1));\r\n\t\t\t\tself.deck = sorted;\r\n\t\t\t}\r\n\t\t},\r\n\t}))\r\n\t.actions((self) => ({\r\n\t\tsetDeck(deck: Card[]) {\r\n\t\t\tself.deck = cast(deck);\r\n\t\t},\r\n\t\tsetDeckName(name: string) {\r\n\t\t\tself.deckName = name;\r\n\t\t},\r\n\t\taddCards(cards: Card[]) {\r\n\t\t\tcards.forEach((card) => self.addCard(card));\r\n\t\t},\r\n\t\tremoveCard(cardId: string) {\r\n\t\t\tif (self.deck.find((item) => item.id === cardId)) {\r\n\t\t\t\tself.deck.replace(\r\n\t\t\t\t\tself.deck.map((item) => {\r\n\t\t\t\t\t\tif (item.id === cardId) {\r\n\t\t\t\t\t\t\titem.quantity--;\r\n\t\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\r\n\t\t\t\tconst deckList = self.deck;\r\n\t\t\t\tconst index = deckList\r\n\t\t\t\t\t.map((card: any) => (card.quantity <= 0 ? card.id : \"\"))\r\n\t\t\t\t\t.lastIndexOf(cardId);\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\tdeckList.splice(index, 1);\r\n\t\t\t\t\tself.deck = deckList;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tfocusCard(cardId: string) {\r\n\t\t\tself.focusedCard = cardId;\r\n\t\t},\r\n\t\tsetCommander(cardId: string) {\r\n\t\t\tself.deck.replace(\r\n\t\t\t\tself.deck.map((card) => {\r\n\t\t\t\t\tif (card.id === cardId) {\r\n\t\t\t\t\t\tcard.isCommander = true;\r\n\t\t\t\t\t\treturn card;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcard.isCommander = false;\r\n\t\t\t\t\treturn card;\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t},\r\n\t\tchangeEdition(newEdition: Card) {\r\n\t\t\tself.deck.replace(\r\n\t\t\t\tself.deck.map((card) => {\r\n\t\t\t\t\tif (card.name === newEdition.name) {\r\n\t\t\t\t\t\tnewEdition.quantity = card.quantity;\r\n\t\t\t\t\t\treturn newEdition;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn card;\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t\tself.focusedCard = newEdition.id;\r\n\t\t},\r\n\t\tclearDeck() {\r\n\t\t\tself.deck.replace([]);\r\n\t\t},\r\n\t}))\r\n\t.views((self) => ({}));\r\n\r\nexport default EditorModel;\r\nexport type EditorState = Instance<typeof EditorModel>;\r\n","import { Instance, onSnapshot, types as t } from \"mobx-state-tree\";\r\nimport { createContext, useContext } from \"react\";\r\nimport EditorModel from \"./editorModel\";\r\n\r\nconst RootModel = t.model(\"Root\", {\r\n\teditor: EditorModel,\r\n});\r\n\r\nlet initialState = RootModel.create({\r\n\teditor: {\r\n\t\tdeckName: \"\",\r\n\t\tbulkImportDialog: false,\r\n\t},\r\n});\r\n\r\nif (localStorage.getItem(\"rootState\")) {\r\n\tinitialState = RootModel.create(\r\n\t\tJSON.parse(localStorage.getItem(\"rootState\") || \"{}\")\r\n\t);\r\n}\r\n\r\nexport default RootModel;\r\n\r\nexport const rootStore = initialState;\r\n\r\nonSnapshot(rootStore, (snapshot) => {\r\n\tlocalStorage.setItem(\"rootState\", JSON.stringify(snapshot));\r\n});\r\n\r\nexport type Root = Instance<typeof RootModel>;\r\nconst RootStoreContext = createContext<null | Root>(null);\r\n\r\nexport const Provider = RootStoreContext.Provider;\r\nexport function useMst() {\r\n\tconst store = useContext(RootStoreContext);\r\n\tif (store === null) {\r\n\t\tthrow new Error(\"Store cannot be null, please add a context provider\");\r\n\t}\r\n\treturn store;\r\n}\r\n","import {\r\n\tAppBar,\r\n\tIconButton,\r\n\tmakeStyles,\r\n\tToolbar,\r\n\tTypography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { useMst } from \"src/mobx\";\r\n\r\nconst useStyles = makeStyles({\r\n\tdeckName: {\r\n\t\ttextTransform: \"capitalize\",\r\n\t},\r\n});\r\n\r\nexport default function AppHeader() {\r\n\tconst { editor } = useMst();\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<AppBar position=\"fixed\">\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n\t\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<Typography variant=\"h6\" className={classes.deckName}>\r\n\t\t\t\t\t\t{editor.deckName}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t\t<Toolbar />\r\n\t\t</div>\r\n\t);\r\n}\r\n","import {\r\n\tBox,\r\n\tButton,\r\n\tDialog,\r\n\tDialogActions,\r\n\tDialogContent,\r\n\tDialogTitle,\r\n\tIconButton,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport React, { useState } from \"react\";\r\nimport \"./styles.scss\";\r\nimport { identifier } from \"../../types\";\r\nimport { useMst } from \"src/mobx\";\r\n\r\ninterface IBulkImporterProps {\r\n\topen: boolean;\r\n\tonClose: () => void;\r\n\tonImport: (ids: identifier[]) => void;\r\n}\r\n\r\nfunction BulkImporter({ open, onClose, onImport }: IBulkImporterProps) {\r\n\tconst createIdentifiers = () => {\r\n\t\tconst identifiers: identifier[] = [];\r\n\t\tcardNames.split(\"\\n\").forEach((card) => {\r\n\t\t\t// eslint-disable-next-line\r\n\t\t\tconst [msg, num, name, set] =\r\n\t\t\t\tcard.match(/([0-9]*)x?([^()\\n]*)(\\(.*\\))?/) || [];\r\n\t\t\tconsole.log(num, name, set);\r\n\r\n\t\t\tfor (var i = 0; i < Number(num || \"1\"); ++i)\r\n\t\t\t\tidentifiers.push(\r\n\t\t\t\t\tObject.assign(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tname: name,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tset ? { set: set?.toLowerCase().substring(1, set.length - 1) } : {}\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t});\r\n\t\treturn identifiers;\r\n\t};\r\n\r\n\tconst handleClose = () => {\r\n\t\tonClose();\r\n\t};\r\n\r\n\tconst handleImport = () => {\r\n\t\tonImport(createIdentifiers());\r\n\t\tonClose();\r\n\t};\r\n\r\n\tconst [cardNames, setCardNames] = useState(\"\");\r\n\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\tclassName=\"import-dialog\"\r\n\t\t\topen={open}\r\n\t\t\tonClose={handleClose}\r\n\t\t\tmaxWidth=\"sm\"\r\n\t\t\tfullWidth={true}\r\n\t\t>\r\n\t\t\t<DialogTitle>\r\n\t\t\t\t<Box display=\"flex\" alignItems=\"center\">\r\n\t\t\t\t\t<Box flexGrow={1}>Bulk Import</Box>\r\n\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t<IconButton onClick={onClose}>\r\n\t\t\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Box>\r\n\t\t\t</DialogTitle>\r\n\t\t\t<DialogContent>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tclassName=\"import-text-field\"\r\n\t\t\t\t\tmultiline\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\trows=\"18\"\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tlabel=\"Card Names\"\r\n\t\t\t\t\tonChange={(e) => setCardNames(e.target.value)}\r\n\t\t\t\t></TextField>\r\n\t\t\t</DialogContent>\r\n\t\t\t<DialogActions>\r\n\t\t\t\t<Button autoFocus onClick={handleImport} color=\"primary\">\r\n\t\t\t\t\timport\r\n\t\t\t\t</Button>\r\n\t\t\t</DialogActions>\r\n\t\t</Dialog>\r\n\t);\r\n}\r\n\r\ninterface INameChangerProps {\r\n\tname?: string;\r\n\topen: boolean;\r\n\tonClose: () => void;\r\n}\r\n\r\nfunction NameChanger({ name, open, onClose }: INameChangerProps) {\r\n\tconst [newName, setnewName] = useState(name || \"\");\r\n\tconst { editor } = useMst();\r\n\r\n\tconst handleClose = () => {\r\n\t\tonClose();\r\n\t};\r\n\r\n\tconst handleImport = () => {\r\n\t\teditor.setDeckName(newName);\r\n\t\tonClose();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\tclassName=\"import-dialog\"\r\n\t\t\topen={open}\r\n\t\t\tonClose={handleClose}\r\n\t\t\tmaxWidth=\"sm\"\r\n\t\t\tfullWidth={true}\r\n\t\t>\r\n\t\t\t<DialogTitle>\r\n\t\t\t\t<Box display=\"flex\" alignItems=\"center\">\r\n\t\t\t\t\t<Box flexGrow={1}>Change Name</Box>\r\n\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t<IconButton onClick={onClose}>\r\n\t\t\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Box>\r\n\t\t\t</DialogTitle>\r\n\t\t\t<DialogContent>\r\n\t\t\t\t<TextField fullWidth onChange={(e) => setnewName(e.target.value)}>\r\n\t\t\t\t\t{name || \"\"}\r\n\t\t\t\t</TextField>\r\n\t\t\t</DialogContent>\r\n\t\t\t<DialogActions>\r\n\t\t\t\t<Button autoFocus onClick={handleImport} color=\"primary\">\r\n\t\t\t\t\tConfirm\r\n\t\t\t\t</Button>\r\n\t\t\t</DialogActions>\r\n\t\t</Dialog>\r\n\t);\r\n}\r\n\r\nexport { BulkImporter, NameChanger };\r\n","import React, { useMemo } from \"react\";\r\nimport { Card } from \"src/mobx/cardModel\";\r\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\r\nimport { Breakpoint } from \"@material-ui/core/styles/createBreakpoints\";\r\nimport {\r\n\tList,\r\n\tListSubheader,\r\n\tListItem,\r\n\tListItemText,\r\n\tIconButton,\r\n\tListItemIcon,\r\n\tListItemSecondaryAction,\r\n} from \"@material-ui/core\";\r\nimport AddCircleRoundedIcon from \"@material-ui/icons/AddCircleRounded\";\r\nimport RemoveCircleRoundedIcon from \"@material-ui/icons/RemoveCircleRounded\";\r\n\r\nimport \"./styles.scss\";\r\nimport \"../../../../assets/mana-cost.css\";\r\nimport { useMst } from \"src/mobx\";\r\n\r\ninterface DeckListProps {\r\n\tname?: string;\r\n\tcards: any;\r\n\twidth: Breakpoint;\r\n}\r\n\r\nfunction DeckList({ name, cards, width }: DeckListProps) {\r\n\tconst getGridListCols = () => {\r\n\t\tif (isWidthUp(\"xl\", width)) {\r\n\t\t\treturn 4;\r\n\t\t}\r\n\t\tif (isWidthUp(\"lg\", width)) {\r\n\t\t\treturn 3;\r\n\t\t}\r\n\t\tif (isWidthUp(\"md\", width)) {\r\n\t\t\treturn 2;\r\n\t\t}\r\n\t\tif (isWidthUp(\"sm\", width)) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn 2;\r\n\t};\r\n\r\n\tconst groups: any = {\r\n\t\tcommander: \"Commanders\",\r\n\t\tplaneswalker: \"Planeswalkers\",\r\n\t\tcreature: \"Creatures\",\r\n\t\tsorcery: \"Sorceries\",\r\n\t\tinstant: \"Instants\",\r\n\t\tartifact: \"Artifacts\",\r\n\t\tenchantment: \"Enchantments\",\r\n\t\tland: \"Lands\",\r\n\t};\r\n\r\n\tconst groupedDeck = useMemo(() => {\r\n\t\tconst grouped: any = {};\r\n\t\tcards.forEach((card: Card) => {\r\n\t\t\tif (card.isCommander) {\r\n\t\t\t\tgrouped.commander\r\n\t\t\t\t\t? grouped.commander.push(card)\r\n\t\t\t\t\t: (grouped.commander = [card]);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t[\r\n\t\t\t\t\"land\",\r\n\t\t\t\t\"creature\",\r\n\t\t\t\t\"planeswalker\",\r\n\t\t\t\t\"artifact\",\r\n\t\t\t\t\"enchantment\",\r\n\t\t\t\t\"sorcery\",\r\n\t\t\t\t\"instant\",\r\n\t\t\t].some((type) => {\r\n\t\t\t\tif (card.type_line.toLowerCase().includes(type)) {\r\n\t\t\t\t\tgrouped[type] ? grouped[type].push(card) : (grouped[type] = [card]);\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn grouped;\r\n\t}, [cards]);\r\n\r\n\treturn (\r\n\t\t<div style={{ columnCount: getGridListCols() }}>\r\n\t\t\t{Object.keys(groups).map(\r\n\t\t\t\t(key) =>\r\n\t\t\t\t\tgroupedDeck[key] && (\r\n\t\t\t\t\t\t<List\r\n\t\t\t\t\t\t\tdense\r\n\t\t\t\t\t\t\tclassName=\"deck-list\"\r\n\t\t\t\t\t\t\tsubheader={\r\n\t\t\t\t\t\t\t\t<ListSubheader\r\n\t\t\t\t\t\t\t\t\tclassName=\"deck-list-subheader\"\r\n\t\t\t\t\t\t\t\t\tcomponent=\"div\"\r\n\t\t\t\t\t\t\t\t\tid=\"nested-list-subheader\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div>{`${groups[key]} (${groupedDeck[key].length})`}</div>\r\n\t\t\t\t\t\t\t\t</ListSubheader>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{groupedDeck[key]?.map((card: Card) => (\r\n\t\t\t\t\t\t\t\t<CardListEntry card={card} />\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t)\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\ninterface CardListEntryProps {\r\n\tcard: Card;\r\n}\r\n\r\nfunction CardListEntry({ card }: CardListEntryProps) {\r\n\tconst { editor } = useMst();\r\n\r\n\tconst ManaCosts = () => {\r\n\t\t// tokenize mana cost\r\n\t\tconst matches = card.mana_cost?.match(/{([^{}]*)}/g);\r\n\t\treturn (\r\n\t\t\t<ListItemIcon className=\"card-mana\">\r\n\t\t\t\t{matches?.map((match) => {\r\n\t\t\t\t\tconst manas = match\r\n\t\t\t\t\t\t.substring(1, match.length - 1)\r\n\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t.replace(\"/\", \"\");\r\n\t\t\t\t\treturn <div className={`mana small s${manas}`} />;\r\n\t\t\t\t})}\r\n\t\t\t</ListItemIcon>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ListItem\r\n\t\t\tbutton\r\n\t\t\tdivider\r\n\t\t\tonClick={() => editor.focusCard(card.id)}\r\n\t\t\tclassName=\"deck-list-entry-container\"\r\n\t\t>\r\n\t\t\t<ListItemText\r\n\t\t\t\tclassName=\"card-quantity\"\r\n\t\t\t\tclasses={{ primary: \"card-text\" }}\r\n\t\t\t\tprimary={card.quantity}\r\n\t\t\t/>\r\n\t\t\t<ListItemText\r\n\t\t\t\tclasses={{ primary: \"card-name card-text\" }}\r\n\t\t\t\tprimary={card.name}\r\n\t\t\t/>\r\n\t\t\t<ManaCosts />\r\n\t\t\t<ListItemSecondaryAction className=\"deck-list-entry-actions\">\r\n\t\t\t\t<IconButton size=\"small\" onClick={() => editor.addCard(card)}>\r\n\t\t\t\t\t<AddCircleRoundedIcon color=\"primary\" />\r\n\t\t\t\t</IconButton>\r\n\t\t\t\t<IconButton size=\"small\" onClick={() => editor.removeCard(card.id)}>\r\n\t\t\t\t\t<RemoveCircleRoundedIcon color=\"secondary\" />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</ListItemSecondaryAction>\r\n\t\t</ListItem>\r\n\t);\r\n}\r\n\r\nexport default withWidth()(DeckList);\r\n","function generateTtsCard(\r\n\tid: number,\r\n\tname: string,\r\n\tfrontUrl: string,\r\n\tbackUrl: string\r\n) {\r\n\treturn {\r\n\t\tdata: {\r\n\t\t\tName: \"Card\",\r\n\t\t\tTransform: {\r\n\t\t\t\tposX: 0.0,\r\n\t\t\t\tposY: 0.0,\r\n\t\t\t\tposZ: 0.0,\r\n\t\t\t\trotX: 0.0,\r\n\t\t\t\trotY: 180.0,\r\n\t\t\t\trotZ: 180.0,\r\n\t\t\t\tscaleX: 1.0,\r\n\t\t\t\tscaleY: 1.0,\r\n\t\t\t\tscaleZ: 1.0,\r\n\t\t\t},\r\n\t\t\tNickname: name,\r\n\t\t\tDescription: \"\",\r\n\t\t\tGMNotes: \"\",\r\n\t\t\tLocked: false,\r\n\t\t\tGrid: true,\r\n\t\t\tSnap: true,\r\n\t\t\tIgnoreFoW: false,\r\n\t\t\tMeasureMovement: false,\r\n\t\t\tDragSelectable: true,\r\n\t\t\tAutoraise: true,\r\n\t\t\tSticky: true,\r\n\t\t\tTooltip: true,\r\n\t\t\tGridProjection: false,\r\n\t\t\tCardID: id * 100,\r\n\t\t\tLuaScript: \"\",\r\n\t\t\tLuaScriptState: \"\",\r\n\t\t\tXmlUI: \"\",\r\n\t\t},\r\n\t\tmodel: {\r\n\t\t\tFaceURL: frontUrl,\r\n\t\t\tBackURL: backUrl,\r\n\t\t\tNumWidth: 1,\r\n\t\t\tNumHeight: 1,\r\n\t\t\tBackIsHidden: true,\r\n\t\t\tUniqueBack: false,\r\n\t\t\tType: 0,\r\n\t\t},\r\n\t};\r\n}\r\n\r\nfunction generateTtsDoubleCard(\r\n\tid: number,\r\n\tname: string,\r\n\tdescription: string,\r\n\tfirstFrontUrl: string,\r\n\tsecondFrontUrl: string,\r\n\tbackUrl: string\r\n) {\r\n\treturn {\r\n\t\tdata: {\r\n\t\t\tName: \"Card\",\r\n\t\t\tTransform: {\r\n\t\t\t\tposX: 0.0,\r\n\t\t\t\tposY: 0.0,\r\n\t\t\t\tposZ: 0.0,\r\n\t\t\t\trotX: 0.0,\r\n\t\t\t\trotY: 180.0,\r\n\t\t\t\trotZ: 180.0,\r\n\t\t\t\tscaleX: 1.0,\r\n\t\t\t\tscaleY: 1.0,\r\n\t\t\t\tscaleZ: 1.0,\r\n\t\t\t},\r\n\t\t\tNickname: name,\r\n\t\t\tDescription: description,\r\n\t\t\tGMNotes: \"\",\r\n\t\t\tLocked: false,\r\n\t\t\tGrid: true,\r\n\t\t\tSnap: true,\r\n\t\t\tIgnoreFoW: false,\r\n\t\t\tMeasureMovement: false,\r\n\t\t\tDragSelectable: true,\r\n\t\t\tAutoraise: true,\r\n\t\t\tSticky: true,\r\n\t\t\tTooltip: true,\r\n\t\t\tGridProjection: false,\r\n\t\t\tCardID: id * 100,\r\n\t\t\tLuaScript: \"\",\r\n\t\t\tLuaScriptState: \"\",\r\n\t\t\tXmlUI: \"\",\r\n\t\t\tStates: {\r\n\t\t\t\t2: {\r\n\t\t\t\t\tGUID: \"81082a\",\r\n\t\t\t\t\tName: \"Card\",\r\n\t\t\t\t\tTransform: {\r\n\t\t\t\t\t\tposX: 0.0,\r\n\t\t\t\t\t\tposY: 0.0,\r\n\t\t\t\t\t\tposZ: 0.0,\r\n\t\t\t\t\t\trotX: 0.0,\r\n\t\t\t\t\t\trotY: 180.0,\r\n\t\t\t\t\t\trotZ: 180.0,\r\n\t\t\t\t\t\tscaleX: 1.0,\r\n\t\t\t\t\t\tscaleY: 1.0,\r\n\t\t\t\t\t\tscaleZ: 1.0,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tNickname: name,\r\n\t\t\t\t\tDescription: description,\r\n\t\t\t\t\tMemo: \"ea9c459a-6047-43aa-968f-a582be4000e8\",\r\n\t\t\t\t\tValue: 0,\r\n\t\t\t\t\tLocked: false,\r\n\t\t\t\t\tGrid: true,\r\n\t\t\t\t\tSnap: true,\r\n\t\t\t\t\tIgnoreFoW: false,\r\n\t\t\t\t\tMeasureMovement: false,\r\n\t\t\t\t\tDragSelectable: true,\r\n\t\t\t\t\tAutoraise: true,\r\n\t\t\t\t\tSticky: true,\r\n\t\t\t\t\tTooltip: true,\r\n\t\t\t\t\tGridProjection: false,\r\n\t\t\t\t\tHideWhenFaceDown: true,\r\n\t\t\t\t\tHands: true,\r\n\t\t\t\t\tCardID: id * 100,\r\n\t\t\t\t\tSidewaysCard: false,\r\n\t\t\t\t\tCustomDeck: {\r\n\t\t\t\t\t\t[id]: {\r\n\t\t\t\t\t\t\tFaceURL: secondFrontUrl,\r\n\t\t\t\t\t\t\tBackURL: backUrl,\r\n\t\t\t\t\t\t\tNumWidth: 1,\r\n\t\t\t\t\t\t\tNumHeight: 1,\r\n\t\t\t\t\t\t\tBackIsHidden: true,\r\n\t\t\t\t\t\t\tUniqueBack: false,\r\n\t\t\t\t\t\t\tType: 0,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t\tmodel: {\r\n\t\t\tFaceURL: firstFrontUrl,\r\n\t\t\tBackURL: backUrl,\r\n\t\t\tNumWidth: 1,\r\n\t\t\tNumHeight: 1,\r\n\t\t\tBackIsHidden: true,\r\n\t\t\tUniqueBack: false,\r\n\t\t\tType: 0,\r\n\t\t},\r\n\t};\r\n}\r\n\r\nfunction generateTtsDeckObject() {\r\n\treturn {\r\n\t\tName: \"DeckCustom\",\r\n\t\tTransform: {\r\n\t\t\tposX: 36.25,\r\n\t\t\tposY: 5.11282444,\r\n\t\t\tposZ: 6.645,\r\n\t\t\trotX: 0.0130744949,\r\n\t\t\trotY: 0.03566377,\r\n\t\t\trotZ: 180.000275,\r\n\t\t\tscaleX: 1.0,\r\n\t\t\tscaleY: 1.0,\r\n\t\t\tscaleZ: 1.0,\r\n\t\t},\r\n\t\tNickname: \"\",\r\n\t\tDescription: \"\",\r\n\t\tGMNotes: \"\",\r\n\t\tColorDiffuse: {\r\n\t\t\tr: 0.713235259,\r\n\t\t\tg: 0.713235259,\r\n\t\t\tb: 0.713235259,\r\n\t\t},\r\n\t\tLocked: false,\r\n\t\tGrid: true,\r\n\t\tSnap: true,\r\n\t\tIgnoreFoW: false,\r\n\t\tMeasureMovement: false,\r\n\t\tDragSelectable: true,\r\n\t\tAutoraise: true,\r\n\t\tSticky: true,\r\n\t\tTooltip: true,\r\n\t\tGridProjection: false,\r\n\t\tHideWhenFaceDown: true,\r\n\t\tHands: false,\r\n\t\tSidewaysCard: false,\r\n\t\tDeckIDs: [0],\r\n\t\tCustomDeck: {},\r\n\t\tLuaScript: \"\",\r\n\t\tLuaScriptState: \"\",\r\n\t\tXmlUI: \"\",\r\n\t\tContainedObjects: [{}],\r\n\t};\r\n}\r\n\r\nfunction generateTtsDeckBox() {\r\n\treturn {\r\n\t\tSaveName: \"\",\r\n\t\tGameMode: \"\",\r\n\t\tDate: \"\",\r\n\t\tGravity: 0.5,\r\n\t\tPlayArea: 0.5,\r\n\t\tGameType: \"\",\r\n\t\tGameComplexity: \"\",\r\n\t\tTags: [],\r\n\t\tTable: \"\",\r\n\t\tSky: \"\",\r\n\t\tNote: \"\",\r\n\t\tRules: \"\",\r\n\t\tTabStates: {},\r\n\t\tObjectStates: [\r\n\t\t\t{\r\n\t\t\t\tName: \"Custom_Model_Bag\",\r\n\t\t\t\tTransform: {\r\n\t\t\t\t\tposX: 35.4643936,\r\n\t\t\t\t\tposY: 2.8808763,\r\n\t\t\t\t\tposZ: 5.782154,\r\n\t\t\t\t\trotX: -2.01687612e-6,\r\n\t\t\t\t\trotY: -0.00141442078,\r\n\t\t\t\t\trotZ: 8.571432e-7,\r\n\t\t\t\t\tscaleX: 1.0,\r\n\t\t\t\t\tscaleY: 1.0,\r\n\t\t\t\t\tscaleZ: 1.0,\r\n\t\t\t\t},\r\n\t\t\t\tNickname: \"Card Deck\",\r\n\t\t\t\tDescription: \"\",\r\n\t\t\t\tGMNotes: \"\",\r\n\t\t\t\tColorDiffuse: {\r\n\t\t\t\t\tr: 0.9999998,\r\n\t\t\t\t\tg: 0.992163241,\r\n\t\t\t\t\tb: 0.9999998,\r\n\t\t\t\t},\r\n\t\t\t\tLocked: false,\r\n\t\t\t\tGrid: false,\r\n\t\t\t\tSnap: true,\r\n\t\t\t\tIgnoreFoW: false,\r\n\t\t\t\tMeasureMovement: false,\r\n\t\t\t\tDragSelectable: true,\r\n\t\t\t\tAutoraise: true,\r\n\t\t\t\tSticky: true,\r\n\t\t\t\tTooltip: true,\r\n\t\t\t\tGridProjection: false,\r\n\t\t\t\tHideWhenFaceDown: false,\r\n\t\t\t\tHands: false,\r\n\t\t\t\tMaterialIndex: -1,\r\n\t\t\t\tMeshIndex: -1,\r\n\t\t\t\tCustomMesh: {\r\n\t\t\t\t\tMeshURL: \"https://www.dropbox.com/s/fbpp2c2mzvdi2lg/DeckBox.obj?dl=1\",\r\n\t\t\t\t\tDiffuseURL:\r\n\t\t\t\t\t\t\"https://www.dropbox.com/s/o53xastt2846bmt/DeckBox.jpg?dl=1\",\r\n\t\t\t\t\tNormalURL: \"\",\r\n\t\t\t\t\tColliderURL: \"\",\r\n\t\t\t\t\tConvex: true,\r\n\t\t\t\t\tMaterialIndex: 2,\r\n\t\t\t\t\tTypeIndex: 6,\r\n\t\t\t\t\tCastShadows: true,\r\n\t\t\t\t},\r\n\t\t\t\tLuaScript: \"\",\r\n\t\t\t\tLuaScriptState: \"\",\r\n\t\t\t\tXmlUI: \"\",\r\n\t\t\t\tContainedObjects: [{}],\r\n\t\t\t},\r\n\t\t],\r\n\t\tLuaScript: \"\",\r\n\t\tLuaScriptState: \"\",\r\n\t\tXmlUI: \"\",\r\n\t\tVersionNumber: \"\",\r\n\t};\r\n}\r\n\r\nfunction generateTtsSingleCard(\r\n\tid: number,\r\n\tname: string,\r\n\tfrontUrl: string,\r\n\tbackUrl: string\r\n) {\r\n\treturn {\r\n\t\tName: \"Card\",\r\n\t\tTransform: {\r\n\t\t\tposX: -33.75,\r\n\t\t\tposY: 4.633549,\r\n\t\t\tposZ: -9.805,\r\n\t\t\trotX: 359.840668,\r\n\t\t\trotY: -0.0008630832,\r\n\t\t\trotZ: 359.920532,\r\n\t\t\tscaleX: 1.0,\r\n\t\t\tscaleY: 1.0,\r\n\t\t\tscaleZ: 1.0,\r\n\t\t},\r\n\t\tNickname: name,\r\n\t\tDescription: \"\",\r\n\t\tGMNotes: \"\",\r\n\t\tColorDiffuse: {\r\n\t\t\tr: 0.713235259,\r\n\t\t\tg: 0.713235259,\r\n\t\t\tb: 0.713235259,\r\n\t\t},\r\n\t\tLocked: false,\r\n\t\tGrid: true,\r\n\t\tSnap: true,\r\n\t\tIgnoreFoW: false,\r\n\t\tMeasureMovement: false,\r\n\t\tDragSelectable: true,\r\n\t\tAutoraise: true,\r\n\t\tSticky: true,\r\n\t\tTooltip: true,\r\n\t\tGridProjection: false,\r\n\t\tHideWhenFaceDown: true,\r\n\t\tHands: true,\r\n\t\tCardID: id * 100,\r\n\t\tSidewaysCard: false,\r\n\t\tCustomDeck: {\r\n\t\t\t[id]: {\r\n\t\t\t\tFaceURL: frontUrl,\r\n\t\t\t\tBackURL: backUrl,\r\n\t\t\t\tNumWidth: 1,\r\n\t\t\t\tNumHeight: 1,\r\n\t\t\t\tBackIsHidden: true,\r\n\t\t\t\tUniqueBack: false,\r\n\t\t\t\tType: 0,\r\n\t\t\t},\r\n\t\t},\r\n\t\tLuaScript: \"\",\r\n\t\tLuaScriptState: \"\",\r\n\t\tXmlUI: \"\",\r\n\t};\r\n}\r\n\r\nexport {\r\n\tgenerateTtsCard,\r\n\tgenerateTtsDoubleCard,\r\n\tgenerateTtsDeckObject,\r\n\tgenerateTtsDeckBox,\r\n\tgenerateTtsSingleCard,\r\n};\r\n","import {\r\n\tgenerateTtsCard,\r\n\tgenerateTtsDoubleCard,\r\n\tgenerateTtsDeckBox,\r\n\tgenerateTtsDeckObject,\r\n\tgenerateTtsSingleCard,\r\n} from \"./generateObjects\";\r\nimport Axios from \"axios\";\r\nimport { Card } from \"../mobx/cardModel\";\r\n\r\nconst defaltBackUrl =\r\n\t\"https://static.wikia.nocookie.net/mtgsalvation_gamepedia/images/f/f8/Magic_card_back.jpg/revision/latest?cb=20140813141013\";\r\n\r\nfunction getCardImageUrl(card: Card): string[] {\r\n\tif (card.image_uris) {\r\n\t\treturn [card.image_uris.normal];\r\n\t} else if (card.card_faces) {\r\n\t\treturn card.card_faces.map((face: any) => face.image_uris.normal);\r\n\t} else {\r\n\t\treturn [];\r\n\t}\r\n}\r\n\r\nfunction buildDeckObject(deckIds: number[], cardList: any[]) {\r\n\tlet deckObj: any = {};\r\n\r\n\tif (cardList.length > 1) {\r\n\t\tdeckObj = generateTtsDeckObject();\r\n\t\tdeckObj.DeckIDs = deckIds;\r\n\r\n\t\tdeckObj.CustomDeck = Object.assign(\r\n\t\t\t{},\r\n\t\t\t...cardList.map((card) => ({\r\n\t\t\t\t[card.data.CardID / 100]: card.model,\r\n\t\t\t}))\r\n\t\t);\r\n\r\n\t\tdeckObj.ContainedObjects = cardList.map((card) => card.data);\r\n\t} else {\r\n\t\tdeckObj = generateTtsSingleCard(\r\n\t\t\tdeckIds[0],\r\n\t\t\tcardList[0].data.Nickname,\r\n\t\t\tcardList[0].model.FaceURL,\r\n\t\t\tcardList[0].model.BackURL\r\n\t\t);\r\n\t}\r\n\r\n\treturn deckObj;\r\n}\r\n\r\nexport default async function generateTtsDeck(\r\n\ttitle: string,\r\n\tdeckList: any[],\r\n\tbackUrl: string = defaltBackUrl\r\n) {\r\n\tconst deckIds: number[] = [];\r\n\tconst commanderIds: number[] = [];\r\n\tconst tokenIds: number[] = [];\r\n\r\n\tlet tokenList: any[] = [];\r\n\tconst commanderList: any[] = [];\r\n\tlet id: number = 1;\r\n\r\n\tconst ttsCardList = deckList.flatMap((card) => {\r\n\t\t// check for any tokens\r\n\t\tif (card.all_parts) {\r\n\t\t\tcard.all_parts.forEach((part: any) => {\r\n\t\t\t\tif (part.component === \"token\" && !tokenList.includes(part.id)) {\r\n\t\t\t\t\ttokenList.push(part.id);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tconst cardImage = getCardImageUrl(card);\r\n\t\t// chack for commander\r\n\t\tif (card.isCommander) {\r\n\t\t\tcommanderIds.push(id);\r\n\t\t\tcommanderList.push(generateTtsCard(id, card.name, cardImage[0], backUrl));\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tdeckIds.push(id * 100);\r\n\t\t// check if the card is double sided\r\n\t\tif (cardImage.length > 1) {\r\n\t\t\treturn generateTtsDoubleCard(\r\n\t\t\t\tid++,\r\n\t\t\t\tcard.name,\r\n\t\t\t\tcard.oracle_text,\r\n\t\t\t\tcardImage[0],\r\n\t\t\t\tcardImage[1],\r\n\t\t\t\tbackUrl\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn generateTtsCard(id++, card.name, cardImage[0], backUrl);\r\n\t});\r\n\r\n\tlet deckBox = generateTtsDeckBox();\r\n\r\n\t// set deck name\r\n\tdeckBox.ObjectStates[0].Nickname = title;\r\n\r\n\t// main deck\r\n\tconst mainDeck = buildDeckObject(deckIds, ttsCardList);\r\n\tdeckBox.ObjectStates[0].ContainedObjects = [mainDeck];\r\n\r\n\t// double sided deck\r\n\tif (commanderList.length > 0) {\r\n\t\tconst commanderDeck = buildDeckObject(commanderIds, commanderList);\r\n\t\tdeckBox.ObjectStates[0].ContainedObjects.push(commanderDeck);\r\n\t}\r\n\r\n\t// first fetch token data\r\n\tif (tokenList.length > 0) {\r\n\t\tconst res = await Axios.post(\r\n\t\t\t\"https://api.scryfall.com/cards/collection\",\r\n\t\t\t{\r\n\t\t\t\tidentifiers: tokenList.map((card: any) => ({\r\n\t\t\t\t\tid: card,\r\n\t\t\t\t})),\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\t// map tokens\r\n\t\ttokenList = res.data.data.map((card: any) => {\r\n\t\t\ttokenIds.push(id * 100);\r\n\t\t\treturn generateTtsCard(id++, card.name, card.image_uris.normal, backUrl);\r\n\t\t});\r\n\r\n\t\tconst tokenDeck = buildDeckObject(tokenIds, tokenList);\r\n\t\tdeckBox.ObjectStates[0].ContainedObjects.push(tokenDeck);\r\n\t}\r\n\r\n\treturn deckBox;\r\n}\r\n","import { Fab } from \"@material-ui/core\";\r\nimport React, { useMemo } from \"react\";\r\nimport { Card } from \"src/mobx/cardModel\";\r\ninterface IDeckDataProps {\r\n\tdeck?: Card[];\r\n}\r\n\r\nexport default function CardCounter({ deck }: IDeckDataProps) {\r\n\tconst count = useMemo(() => {\r\n\t\tlet card_num = 0;\r\n\t\tdeck?.forEach((card) => (card_num += card.quantity));\r\n\t\treturn card_num;\r\n\t}, [deck]);\r\n\r\n\treturn (\r\n\t\t<div className=\"deck-counter\">\r\n\t\t\t<Fab color=\"primary\" aria-label=\"add\">\r\n\t\t\t\t{count}\r\n\t\t\t</Fab>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { BulkImporter, NameChanger } from \"./deckDialogs\";\r\nimport DeckList from \"./deckDisplay/deckList\";\r\nimport { identifier } from \"../../types\";\r\nimport Axios from \"axios\";\r\nimport { Button, Menu, MenuItem, Typography } from \"@material-ui/core\";\r\nimport \"./styles.scss\";\r\nimport generateTtsDeck from \"../../ttsGenerator/generateDeck\";\r\nimport FileSaver from \"file-saver\";\r\nimport CardCounter from \"./deckCardCounter\";\r\nimport { inject, observer } from \"mobx-react\";\r\nimport { Root } from \"../../mobx\";\r\nimport { getSnapshot } from \"mobx-state-tree\";\r\n\r\ninterface DeckViewState {\r\n\timporterOpen: boolean;\r\n\tactionAnchorEl: any;\r\n\tdeckTitle: string;\r\n\tchangeNameOpen: boolean;\r\n}\r\n\r\ninterface DeckViewProps {\r\n\trootStore?: Root;\r\n}\r\n\r\n@inject(\"rootStore\")\r\n@observer\r\nexport default class DeckView extends Component<DeckViewProps, DeckViewState> {\r\n\tstate = {\r\n\t\timporterOpen: false,\r\n\t\tchangeNameOpen: false,\r\n\t\tactionAnchorEl: null,\r\n\t\tdeckTitle: \"\",\r\n\t};\r\n\r\n\tbulkImportCards = async (identifiers: identifier[]) => {\r\n\t\tconst cards: any[] = [];\r\n\t\tlet remain = identifiers.length;\r\n\t\t// scryfall has a limit of 75 cards\r\n\t\twhile (remain > 0) {\r\n\t\t\tconst fetched = identifiers.length - remain;\r\n\t\t\tconst res = await Axios.post(\r\n\t\t\t\t\"https://api.scryfall.com/cards/collection\",\r\n\t\t\t\t{\r\n\t\t\t\t\tidentifiers: identifiers.slice(\r\n\t\t\t\t\t\tfetched,\r\n\t\t\t\t\t\tfetched + 75 < identifiers.length\r\n\t\t\t\t\t\t\t? fetched + 75\r\n\t\t\t\t\t\t\t: identifiers.length\r\n\t\t\t\t\t),\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tcards.push(...res.data.data);\r\n\r\n\t\t\tremain -= 75;\r\n\t\t}\r\n\r\n\t\tthis.props.rootStore?.editor.addCards(cards);\r\n\t};\r\n\r\n\timportAction = () => {\r\n\t\tthis.setState({ importerOpen: true, actionAnchorEl: null });\r\n\t};\r\n\r\n\texportAction = async () => {\r\n\t\tconst blob = new Blob(\r\n\t\t\t[\r\n\t\t\t\tJSON.stringify(\r\n\t\t\t\t\tawait generateTtsDeck(\r\n\t\t\t\t\t\tthis.props.rootStore!.editor.deckName,\r\n\t\t\t\t\t\tthis.props.rootStore!.editor.deck\r\n\t\t\t\t\t)\r\n\t\t\t\t),\r\n\t\t\t],\r\n\t\t\t{ type: \"application/json;charset=utf-8\" }\r\n\t\t);\r\n\t\tconsole.log(\r\n\t\t\tJSON.stringify(\r\n\t\t\t\tawait generateTtsDeck(\r\n\t\t\t\t\tthis.props.rootStore!.editor.deckName,\r\n\t\t\t\t\tthis.props.rootStore!.editor.deck\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\tFileSaver.saveAs(blob, `${this.props.rootStore!.editor.deckName}.json`);\r\n\t};\r\n\r\n\tchangeNameAction = () => {\r\n\t\tthis.setState({ changeNameOpen: true });\r\n\t};\r\n\r\n\tclearAction = () => {\r\n\t\tthis.props.rootStore!.editor.clearDeck();\r\n\t};\r\n\r\n\thandleCardDelete = (cardId: string) => {\r\n\t\tthis.props.rootStore!.editor.removeCard(cardId);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst deck = this.props.rootStore\r\n\t\t\t? getSnapshot(this.props.rootStore.editor.deck)\r\n\t\t\t: [];\r\n\r\n\t\tconst ActionMenu = () => (\r\n\t\t\t<Menu\r\n\t\t\t\tid=\"simple-menu\"\r\n\t\t\t\tanchorEl={this.state.actionAnchorEl}\r\n\t\t\t\tkeepMounted\r\n\t\t\t\topen={Boolean(this.state.actionAnchorEl)}\r\n\t\t\t\tonClose={() => this.setState({ actionAnchorEl: null })}\r\n\t\t\t>\r\n\t\t\t\t<MenuItem onClick={this.changeNameAction}>Change Name</MenuItem>\r\n\t\t\t\t<MenuItem onClick={this.importAction}>Bulk Import</MenuItem>\r\n\t\t\t\t<MenuItem onClick={this.exportAction}>Export to tts</MenuItem>\r\n\t\t\t\t<MenuItem onClick={this.clearAction}>Clear</MenuItem>\r\n\t\t\t</Menu>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"deck-view-container\">\r\n\t\t\t\t<BulkImporter\r\n\t\t\t\t\topen={this.state.importerOpen}\r\n\t\t\t\t\tonClose={() => {\r\n\t\t\t\t\t\tthis.setState({ importerOpen: false });\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonImport={this.bulkImportCards}\r\n\t\t\t\t/>\r\n\t\t\t\t<NameChanger\r\n\t\t\t\t\tname={this.state.deckTitle}\r\n\t\t\t\t\topen={this.state.changeNameOpen}\r\n\t\t\t\t\tonClose={() => {\r\n\t\t\t\t\t\tthis.setState({ changeNameOpen: false });\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"deck-view-title\"></div>\r\n\t\t\t\t<div className=\"deck-menu\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tonClick={(e) => this.setState({ actionAnchorEl: e.currentTarget })}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tActions\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<ActionMenu />\r\n\t\t\t\t</div>\r\n\t\t\t\t<Typography\r\n\t\t\t\t\tvariant=\"h2\"\r\n\t\t\t\t\talign=\"left\"\r\n\t\t\t\t\tparagraph\r\n\t\t\t\t\tclassName=\"deck-title\"\r\n\t\t\t\t\tstyle={{ color: \"white\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\t{this.state.deckTitle || \"\"}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<DeckList cards={deck}></DeckList>\r\n\t\t\t\t<CardCounter deck={this.props.rootStore?.editor.deck} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import { Box } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\ninterface TabPanelProps {\r\n\tchildren?: React.ReactNode;\r\n\tindex: any;\r\n\tvalue: any;\r\n}\r\n\r\nexport default function TabPanel(props: TabPanelProps) {\r\n\tconst { children, value, index, ...other } = props;\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\trole=\"tabpanel\"\r\n\t\t\thidden={value !== index}\r\n\t\t\tid={`simple-tabpanel-${index}`}\r\n\t\t\taria-labelledby={`simple-tab-${index}`}\r\n\t\t\t{...other}\r\n\t\t>\r\n\t\t\t{value === index && <Box>{children}</Box>}\r\n\t\t</div>\r\n\t);\r\n}\r\n","import {\r\n\tTypography,\r\n\tTab,\r\n\tTabs,\r\n\tDivider,\r\n\tGridList,\r\n\tTooltip,\r\n\tGridListTile,\r\n\tButton,\r\n} from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport { Card } from \"../../mobx/cardModel\";\r\nimport TabPanel from \"../../util/tabPanel\";\r\nimport Axios from \"axios\";\r\nimport CheckRoundedIcon from \"@material-ui/icons/CheckRounded\";\r\n\r\ninterface CardDetailProps {\r\n\tcard?: Card;\r\n\tonSetCommander: (cardId: string) => void;\r\n\tonEditionChange: (newEdition: Card) => void;\r\n}\r\n\r\nexport default class CardDetail extends Component<CardDetailProps> {\r\n\tstate = {\r\n\t\tvalue: 0,\r\n\t\teditions: [],\r\n\t\tselected: \"\",\r\n\t};\r\n\r\n\tasync componentDidUpdate(prevProps: CardDetailProps) {\r\n\t\tif (prevProps !== this.props && this.props.card) {\r\n\t\t\tconst res = await Axios.get(\"https://api.scryfall.com/cards/search\", {\r\n\t\t\t\tparams: {\r\n\t\t\t\t\tq: `!\"${this.props.card?.name}\"`,\r\n\t\t\t\t\tunique: \"prints\",\r\n\t\t\t\t\torder: \"released\",\r\n\t\t\t\t},\r\n\t\t\t});\r\n\r\n\t\t\tthis.setState({ editions: res.data.data, selected: this.props.card?.id });\r\n\t\t}\r\n\t}\r\n\r\n\thandleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n\t\tthis.setState({ value: newValue });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst card = this.props.card;\r\n\r\n\t\tconst CardInfo = () => (\r\n\t\t\t<div className=\"card-detail-info-container\">\r\n\t\t\t\t<Typography variant=\"h5\">{card?.name}</Typography>\r\n\t\t\t\t<Divider />\r\n\t\t\t\t{card?.card_faces && card?.card_faces.length > 0 ? (\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\tborderRadius: \"11px\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tsrc={card?.card_faces[0].image_uris?.normal}\r\n\t\t\t\t\t\talt={card?.name}\r\n\t\t\t\t\t></img>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\tborderRadius: \"11px\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tsrc={card?.image_uris?.normal}\r\n\t\t\t\t\t\talt={card?.name}\r\n\t\t\t\t\t></img>\r\n\t\t\t\t)}\r\n\t\t\t\t<Divider />\r\n\t\t\t\t<Typography>{card?.type_line}</Typography>\r\n\t\t\t\t{((card?.type_line.includes(\"Legendary \") &&\r\n\t\t\t\t\tcard?.type_line.includes(\"Creature\")) ||\r\n\t\t\t\t\tcard?.type_line.includes(\"Planeswalker\")) && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tclassName=\"card-detail-set-commander\"\r\n\t\t\t\t\t\t\tonClick={() => this.props.onSetCommander(card.id)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tSet as Commander\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t\tconst EditionSelect = () =>\r\n\t\t\tthis.state.editions && (\r\n\t\t\t\t<div className=\"card-detail-edition-container\">\r\n\t\t\t\t\t<GridList cellHeight={\"auto\"} spacing={8} cols={2}>\r\n\t\t\t\t\t\t{this.state.editions?.map((card: Card, index: number) => (\r\n\t\t\t\t\t\t\t<GridListTile key={index}>\r\n\t\t\t\t\t\t\t\t<Tooltip title={card.set_name}>\r\n\t\t\t\t\t\t\t\t\t<div onClick={() => this.props.onEditionChange(card)}>\r\n\t\t\t\t\t\t\t\t\t\t{card.card_faces && card.card_faces.length > 0 ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: \"11px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={card.card_faces[0].image_uris?.normal}\r\n\t\t\t\t\t\t\t\t\t\t\t\talt={card.name}\r\n\t\t\t\t\t\t\t\t\t\t\t></img>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\theight: \"100%\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: \"11px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={card.image_uris?.normal}\r\n\t\t\t\t\t\t\t\t\t\t\t\talt={card.name}\r\n\t\t\t\t\t\t\t\t\t\t\t></img>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t{card.id === this.props.card?.id && (\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-detail-edition-selected\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<CheckRoundedIcon color=\"primary\" fontSize=\"large\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t</GridListTile>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</GridList>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"card-detail-container\">\r\n\t\t\t\t<Tabs\r\n\t\t\t\t\tvalue={this.state.value}\r\n\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\tindicatorColor=\"primary\"\r\n\t\t\t\t\tclassName=\"card-detail-tabs\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<Tab label=\"Details\" aria-label=\"selected card\" />\r\n\t\t\t\t\t<Tab label=\"Edition\" aria-label=\"search\" />\r\n\t\t\t\t</Tabs>\r\n\t\t\t\t<TabPanel value={this.state.value} index={0}>\r\n\t\t\t\t\t<CardInfo />\r\n\t\t\t\t</TabPanel>\r\n\t\t\t\t<TabPanel value={this.state.value} index={1}>\r\n\t\t\t\t\t<EditionSelect />\r\n\t\t\t\t</TabPanel>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import { Tab, Tabs } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport BookIcon from \"@material-ui/icons/Book\";\r\nimport FindInPageIcon from \"@material-ui/icons/FindInPage\";\r\nimport CardDetail from \"./cardDetail\";\r\nimport TabPanel from \"../../util/tabPanel\";\r\nimport { useMst } from \"../../mobx\";\r\nimport { Card } from \"../../mobx/cardModel\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst sidebarWitdh = \"400px\";\r\n\r\nfunction EditorSidebar() {\r\n\tconst [value, setValue] = React.useState(0);\r\n\tconst store = useMst();\r\n\r\n\tconst handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n\t\tsetValue(newValue);\r\n\t};\r\n\r\n\tconst focusedCardId = store.editor.focusedCard;\r\n\tconst focusedCard = store.editor.deck.find(\r\n\t\t(card: Card) => card.id === focusedCardId\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div style={{ position: \"relative\", minWidth: sidebarWitdh }}>\r\n\t\t\t<div className=\"editor-sidebar-container\" style={{ width: sidebarWitdh }}>\r\n\t\t\t\t<Tabs\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\torientation=\"vertical\"\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tindicatorColor=\"secondary\"\r\n\t\t\t\t\tclassName=\"editor-sidebar-tabs\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<Tab\r\n\t\t\t\t\t\ticon={<BookIcon style={{ fill: \"white\" }} />}\r\n\t\t\t\t\t\taria-label=\"selected card\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Tab\r\n\t\t\t\t\t\ticon={<FindInPageIcon style={{ fill: \"white\" }} />}\r\n\t\t\t\t\t\taria-label=\"search\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Tabs>\r\n\t\t\t\t<TabPanel value={value} index={0}>\r\n\t\t\t\t\t<CardDetail\r\n\t\t\t\t\t\tcard={focusedCard}\r\n\t\t\t\t\t\tonSetCommander={(id) => store.editor.setCommander(id)}\r\n\t\t\t\t\t\tonEditionChange={(newEdition) =>\r\n\t\t\t\t\t\t\tstore.editor.changeEdition(newEdition)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</TabPanel>\r\n\t\t\t\t<TabPanel value={value} index={1}>\r\n\t\t\t\t\tSearch\r\n\t\t\t\t</TabPanel>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default observer(EditorSidebar);\r\n","import React from \"react\";\r\nimport DeckView from \"../deck/deckView\";\r\nimport EditorSidebar from \"./editorSidebar\";\r\nimport \"./styles.scss\";\r\n\r\nexport default function DeckEditor() {\r\n\treturn (\r\n\t\t<div className=\"editor-container\">\r\n\t\t\t<EditorSidebar />\r\n\t\t\t<DeckView />\r\n\t\t</div>\r\n\t);\r\n}\r\n","import \"./App.css\";\nimport \"fontsource-roboto\";\nimport AppHeader from \"./components/header/appHeader\";\nimport DeckEditor from \"./components/editor/deckEditor\";\nimport React from \"react\";\nimport { rootStore, Provider as ContextProvider } from \"./mobx\";\nimport { Provider } from \"mobx-react\";\n\nfunction App() {\n\treturn (\n\t\t<Provider rootStore={rootStore}>\n\t\t\t<ContextProvider value={rootStore}>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<AppHeader />\n\t\t\t\t\t<DeckEditor />\n\t\t\t\t</div>\n\t\t\t</ContextProvider>\n\t\t</Provider>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}